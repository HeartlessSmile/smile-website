import{_ as n,c as a,a as p,o as e}from"./app-DzEwyuga.js";const t={};function l(o,s){return e(),a("div",null,s[0]||(s[0]=[p(`<h1 id="javascript-api" tabindex="-1"><a class="header-anchor" href="#javascript-api"><span>JavaScript API</span></a></h1><p><code>Rollup</code> 提供了一个可从 <code>Node.js</code> 使用的 <code>JavaScript API</code>。你很少需要使用它，不过通过这个 API 我们可以比较明显的知道<code>Rollup</code> 的构建大致流程。</p><p>内容其实并不多，主要核心两个函数，<code>rollup()</code> 与 <code>watch()</code></p><ul><li><code>rollup.rollup</code><ul><li><code>inputOptions</code> 对象</li><li><code>outputOptions</code> 对象</li></ul></li><li><code>rollup.watch</code><ul><li><code>watchOptions</code></li></ul></li></ul><p>其实用起来的基本思路和配置文件差不多。直接来看一下效果：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> rollup <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;rollup&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> inputOptions <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">input</span><span class="token operator">:</span> <span class="token string">&#39;src/index.js&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">external</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> outputOptions <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">dir</span><span class="token operator">:</span> <span class="token string">&#39;dist&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">format</span><span class="token operator">:</span> <span class="token string">&#39;esm&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">sourcemap</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">entryFileNames</span><span class="token operator">:</span> <span class="token string">&#39;[name].[hash].js&#39;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> </span>
<span class="line">  <span class="token keyword">let</span> bundle<span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">let</span> buildFailed <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">    bundle <span class="token operator">=</span> <span class="token keyword">await</span> rollup<span class="token punctuation">.</span><span class="token function">rollup</span><span class="token punctuation">(</span>inputOptions<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">await</span> bundle<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>outputOptions<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    buildFailed <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>bundle<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 关闭打包过程</span></span>
<span class="line">    <span class="token keyword">await</span> bundle<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span>buildFailed <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> watchOptions <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token operator">...</span>inputOptions<span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">[</span>outputOptions<span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">watch</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">include</span><span class="token operator">:</span> <span class="token string">&#39;src/**&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token string">&#39;node_modules/**&#39;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> watcher <span class="token operator">=</span> rollup<span class="token punctuation">.</span><span class="token function">watch</span><span class="token punctuation">(</span>watchOptions<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">watcher<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;event&#39;</span><span class="token punctuation">,</span> <span class="token parameter">event</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">//确保每次打包完成后正确的关闭打包</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>result<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    event<span class="token punctuation">.</span>result<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其实整个过程无非就是把我们之前配置的流程转换位了js代码的形式。<code>watch api</code>很明显就是命令行中使用 <code>--watch</code> 标志运行 <code>Rollup</code> 时的效果。</p><p>我们主要来看一下<code>rollup()</code>函数，从<code>rollup()</code>函数就可以看出，<code>Rollup</code> 打包构建流程主要是两大步骤：</p><h2 id="build" tabindex="-1"><a class="header-anchor" href="#build"><span>build</span></a></h2><p>主要负责创建模块依赖，初始化各个模块的AST(抽象语法树)，以及模块之间的依赖关系</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> rollup <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;rollup&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> inputOptions <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">input</span><span class="token operator">:</span> <span class="token string">&#39;src/index.js&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">external</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> </span>
<span class="line">  <span class="token keyword">const</span> bundle <span class="token operator">=</span> <span class="token keyword">await</span> rollup<span class="token punctuation">.</span><span class="token function">rollup</span><span class="token punctuation">(</span>inputOptions<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>bundle<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 打印bundle对象</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>bundle<span class="token punctuation">.</span>cache<span class="token punctuation">.</span>modules<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//打印模块内容</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// 打印bundle对象</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">cache</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">modules</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token punctuation">[</span>Object<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>Object<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>Object<span class="token punctuation">]</span> <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>Object<span class="token operator">:</span> <span class="token keyword">null</span> prototype<span class="token punctuation">]</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">close</span><span class="token operator">:</span> <span class="token punctuation">[</span>AsyncFunction<span class="token operator">:</span> close<span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">closed</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">generate</span><span class="token operator">:</span> <span class="token punctuation">[</span>AsyncFunction<span class="token operator">:</span> generate<span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">watchFiles</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token string">&#39;/Users/yingside/Desktop/rollup-api-demo/src/index.js&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&#39;/Users/yingside/Desktop/rollup-api-demo/src/randomNumber.js&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&#39;/Users/yingside/Desktop/rollup-api-demo/src/deepClone.js&#39;</span></span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">write</span><span class="token operator">:</span> <span class="token punctuation">[</span>AsyncFunction<span class="token operator">:</span> write<span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// 打印模块内容</span></span>
<span class="line"><span class="token punctuation">[</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">assertions</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">ast</span><span class="token operator">:</span> Node <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;Program&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">start</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">end</span><span class="token operator">:</span> <span class="token number">262</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token punctuation">[</span>Array<span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">sourceType</span><span class="token operator">:</span> <span class="token string">&#39;module&#39;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token string">&#39;/**\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39; * 随机数\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39; * @param {*} min 最小值\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39; * @param {*} max 最大值\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39; * @returns min-max之间的随机整数\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39; */\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39;const randomNumber = (min, max) =&gt; {\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39;  min = Math.ceil(min);\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39;  max = Math.floor(max);\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39;  return Math.floor(Math.random() * (max - min + 1)) + min;\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39;}\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39;\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39;export default randomNumber&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">customTransformCache</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">dependencies</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;/Users/yingside/Desktop/rollup-api-demo/src/randomNumber.js&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">moduleSideEffects</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">originalCode</span><span class="token operator">:</span> <span class="token string">&#39;/**\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39; * 随机数\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39; * @param {*} min 最小值\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39; * @param {*} max 最大值\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39; * @returns min-max之间的随机整数\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39; */\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39;const randomNumber = (min, max) =&gt; {\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39;  min = Math.ceil(min);\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39;  max = Math.floor(max);\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39;  return Math.floor(Math.random() * (max - min + 1)) + min;\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39;}\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39;\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39;export default randomNumber&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">originalSourcemap</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">resolvedIds</span><span class="token operator">:</span> <span class="token punctuation">[</span>Object<span class="token operator">:</span> <span class="token keyword">null</span> prototype<span class="token punctuation">]</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">sourcemapChain</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">syntheticNamedExports</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">transformDependencies</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">transformFiles</span><span class="token operator">:</span> <span class="token keyword">undefined</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">assertions</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">ast</span><span class="token operator">:</span> Node <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;Program&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">start</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">end</span><span class="token operator">:</span> <span class="token number">349</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token punctuation">[</span>Array<span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">sourceType</span><span class="token operator">:</span> <span class="token string">&#39;module&#39;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token string">&#39;/**\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39; * 深拷贝\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39; * @param obj 需要深拷贝的对象\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39; * @returns 深拷贝对象\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39; */\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39;const deepClone = (obj) =&gt; {\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&quot;  if(typeof obj !== &#39;object&#39; || obj === null) {\\n&quot;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39;    return obj\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39;  }\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39;  const result = Array.isArray(obj) ? [] : {};\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39;  for(let key in obj) {\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39;    if(obj.hasOwnProperty(key)) {\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39;      result[key] = deepClone(obj[key])\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39;    }\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39;  }\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39;  return result\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39;}\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39;export default deepClone&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">customTransformCache</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">dependencies</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;/Users/yingside/Desktop/rollup-api-demo/src/deepClone.js&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">moduleSideEffects</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">originalCode</span><span class="token operator">:</span> <span class="token string">&#39;/**\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39; * 深拷贝\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39; * @param obj 需要深拷贝的对象\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39; * @returns 深拷贝对象\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39; */\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39;const deepClone = (obj) =&gt; {\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&quot;  if(typeof obj !== &#39;object&#39; || obj === null) {\\n&quot;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39;    return obj\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39;  }\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39;  const result = Array.isArray(obj) ? [] : {};\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39;  for(let key in obj) {\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39;    if(obj.hasOwnProperty(key)) {\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39;      result[key] = deepClone(obj[key])\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39;    }\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39;  }\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39;  return result\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39;}\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39;export default deepClone&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">originalSourcemap</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">resolvedIds</span><span class="token operator">:</span> <span class="token punctuation">[</span>Object<span class="token operator">:</span> <span class="token keyword">null</span> prototype<span class="token punctuation">]</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">sourcemapChain</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">syntheticNamedExports</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">transformDependencies</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">transformFiles</span><span class="token operator">:</span> <span class="token keyword">undefined</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">assertions</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">ast</span><span class="token operator">:</span> Node <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;Program&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">start</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">end</span><span class="token operator">:</span> <span class="token number">131</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token punctuation">[</span>Array<span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">sourceType</span><span class="token operator">:</span> <span class="token string">&#39;module&#39;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token string">&#39;import randomNumber from &quot;./randomNumber.js&quot;;\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39;import deepClone from &quot;./deepClone.js&quot;;\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39;\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39;export default { randomNumber, deepClone }\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39;\\n&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">customTransformCache</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">dependencies</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">      <span class="token string">&#39;/Users/yingside/Desktop/rollup-api-demo/src/randomNumber.js&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token string">&#39;/Users/yingside/Desktop/rollup-api-demo/src/deepClone.js&#39;</span></span>
<span class="line">    <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;/Users/yingside/Desktop/rollup-api-demo/src/index.js&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">moduleSideEffects</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">originalCode</span><span class="token operator">:</span> <span class="token string">&#39;import randomNumber from &quot;./randomNumber.js&quot;;\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39;import deepClone from &quot;./deepClone.js&quot;;\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39;\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39;export default { randomNumber, deepClone }\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">      <span class="token string">&#39;\\n&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">originalSourcemap</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">resolvedIds</span><span class="token operator">:</span> <span class="token punctuation">[</span>Object<span class="token operator">:</span> <span class="token keyword">null</span> prototype<span class="token punctuation">]</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token string-property property">&#39;./randomNumber.js&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span>Object<span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token string-property property">&#39;./deepClone.js&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span>Object<span class="token punctuation">]</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">sourcemapChain</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">syntheticNamedExports</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">transformDependencies</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">transformFiles</span><span class="token operator">:</span> <span class="token keyword">undefined</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过上面两个打印语句的结果，其实就可以分析出，在<code>build</code>阶段产生的<code>bunlde</code>对象，并没有模块打包，这个对象的作用在于存储各个模块的内容及依赖关系，并且提供了<code>generate(不写入)</code>，<code>write(写入磁盘)</code>方法，方便后续output阶段输出产物</p><h2 id="output" tabindex="-1"><a class="header-anchor" href="#output"><span>output</span></a></h2><p>通过 <code>rollup()</code> 函数返回的对象 <code>bundle</code> 有两个重要的函数</p><ul><li><p><code>generate</code> 生成打包产物，不写入磁盘</p></li><li><p><code>write</code> 生成打包产物，写入磁盘</p></li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> rollup <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;rollup&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> inputOptions <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">input</span><span class="token operator">:</span> <span class="token string">&#39;src/index.js&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">external</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> outputOptions <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">dir</span><span class="token operator">:</span> <span class="token string">&#39;dist&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">format</span><span class="token operator">:</span> <span class="token string">&#39;esm&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">sourcemap</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">entryFileNames</span><span class="token operator">:</span> <span class="token string">&#39;[name].[hash].js&#39;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> </span>
<span class="line">  <span class="token keyword">const</span> bundle <span class="token operator">=</span> <span class="token keyword">await</span> rollup<span class="token punctuation">.</span><span class="token function">rollup</span><span class="token punctuation">(</span>inputOptions<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> resp <span class="token operator">=</span> <span class="token keyword">await</span> bundle<span class="token punctuation">.</span><span class="token function">generate</span><span class="token punctuation">(</span>outputOptions<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>resp<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>执行结果：</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">exports</span><span class="token operator">:</span> <span class="token punctuation">[</span>Array<span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">facadeModuleId</span><span class="token operator">:</span> <span class="token string">&#39;/Users/yingside/Desktop/rollup-api-demo/src/index.js&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">isDynamicEntry</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">isEntry</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">isImplicitEntry</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">moduleIds</span><span class="token operator">:</span> <span class="token punctuation">[</span>Array<span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;index&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;chunk&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">dynamicImports</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">fileName</span><span class="token operator">:</span> <span class="token string">&#39;index.1730c9fc.js&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">implicitlyLoadedBefore</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">importedBindings</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">imports</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">modules</span><span class="token operator">:</span> <span class="token punctuation">[</span>Object<span class="token operator">:</span> <span class="token keyword">null</span> prototype<span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">referencedFiles</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token string">&#39;/**\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">        <span class="token string">&#39; * 随机数\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">        <span class="token string">&#39; * @param {*} min 最小值\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">        <span class="token string">&#39; * @param {*} max 最大值\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">        <span class="token string">&#39; * @returns min-max之间的随机整数\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">        <span class="token string">&#39; */\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">        <span class="token string">&#39;const randomNumber = (min, max) =&gt; {\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">        <span class="token string">&#39;  min = Math.ceil(min);\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">        <span class="token string">&#39;  max = Math.floor(max);\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">        <span class="token string">&#39;  return Math.floor(Math.random() * (max - min + 1)) + min;\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">        <span class="token string">&#39;};\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">        <span class="token string">&#39;\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">        <span class="token string">&#39;/**\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">        <span class="token string">&#39; * 深拷贝\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">        <span class="token string">&#39; * @param obj 需要深拷贝的对象\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">        <span class="token string">&#39; * @returns 深拷贝对象\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">        <span class="token string">&#39; */\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">        <span class="token string">&#39;const deepClone = (obj) =&gt; {\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">        <span class="token string">&quot;  if(typeof obj !== &#39;object&#39; || obj === null) {\\n&quot;</span> <span class="token operator">+</span></span>
<span class="line">        <span class="token string">&#39;    return obj\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">        <span class="token string">&#39;  }\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">        <span class="token string">&#39;  const result = Array.isArray(obj) ? [] : {};\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">        <span class="token string">&#39;  for(let key in obj) {\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">        <span class="token string">&#39;    if(obj.hasOwnProperty(key)) {\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">        <span class="token string">&#39;      result[key] = deepClone(obj[key]);\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">        <span class="token string">&#39;    }\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">        <span class="token string">&#39;  }\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">        <span class="token string">&#39;  return result\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">        <span class="token string">&#39;};\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">        <span class="token string">&#39;\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">        <span class="token string">&#39;var index = { randomNumber, deepClone };\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">        <span class="token string">&#39;\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">        <span class="token string">&#39;export { index as default };\\n&#39;</span> <span class="token operator">+</span></span>
<span class="line">        <span class="token string">&#39;//# sourceMappingURL=index.1730c9fc.js.map\\n&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">map</span><span class="token operator">:</span> <span class="token punctuation">[</span>SourceMap<span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">preliminaryFileName</span><span class="token operator">:</span> <span class="token string">&#39;index.DzEwyuga.js&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">sourcemapFileName</span><span class="token operator">:</span> <span class="token string">&#39;index.1730c9fc.js.map&#39;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">fileName</span><span class="token operator">:</span> <span class="token string">&#39;index.1730c9fc.js.map&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">needsCodeReference</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">source</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">{&quot;version&quot;:3,&quot;file&quot;:&quot;index.1730c9fc.js&quot;,&quot;sources&quot;:[&quot;../src/randomNumber.js&quot;,&quot;../src/deepClone.js&quot;,&quot;../src/index.js&quot;],&quot;sourcesContent&quot;:[&quot;/**\\\\n * 随机数\\\\n * @param {*} min 最小值\\\\n * @param {*} max 最大值\\\\n * @returns min-max之间的随机整数\\\\n */\\\\nconst randomNumber = (min, max) =&gt; {\\\\n  min = Math.ceil(min);\\\\n  max = Math.floor(max);\\\\n  return Math.floor(Math.random() * (max - min + 1)) + min;\\\\n}\\\\n\\\\nexport default randomNumber&quot;,&quot;/**\\\\n * 深拷贝\\\\n * @param obj 需要深拷贝的对象\\\\n * @returns 深拷贝对象\\\\n */\\\\nconst deepClone = (obj) =&gt; {\\\\n  if(typeof obj !== &#39;object&#39; || obj === null) {\\\\n    return obj\\\\n  }\\\\n  const result = Array.isArray(obj) ? [] : {};\\\\n  for(let key in obj) {\\\\n    if(obj.hasOwnProperty(key)) {\\\\n      result[key] = deepClone(obj[key])\\\\n    }\\\\n  }\\\\n  return result\\\\n}\\\\nexport default deepClone&quot;,&quot;import randomNumber from \\\\&quot;./randomNumber.js\\\\&quot;;\\\\nimport deepClone from \\\\&quot;./deepClone.js\\\\&quot;;\\\\n\\\\nexport default { randomNumber, deepClone }\\\\n\\\\n&quot;],&quot;names&quot;:[],&quot;mappings&quot;:&quot;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,YAAY,GAAG,CAAC,GAAG,EAAE,GAAG,KAAK;AACnC,EAAE,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACvB,EAAE,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACxB,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;AAC3D;;ACVA;AACA;AACA;AACA;AACA;AACA,MAAM,SAAS,GAAG,CAAC,GAAG,KAAK;AAC3B,EAAE,GAAG,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,KAAK,IAAI,EAAE;AAC9C,IAAI,OAAO,GAAG;AACd,GAAG;AACH,EAAE,MAAM,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;AAC9C,EAAE,IAAI,IAAI,GAAG,IAAI,GAAG,EAAE;AACtB,IAAI,GAAG,GAAG,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;AAChC,MAAM,MAAM,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,EAAC;AACvC,KAAK;AACL,GAAG;AACH,EAAE,OAAO,MAAM;AACf;;ACbA,YAAe,EAAE,YAAY,EAAE,SAAS;;;;&quot;}</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;asset&#39;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,20)]))}const c=n(t,[["render",l],["__file","api.html.vue"]]),r=JSON.parse('{"path":"/advanced/rollup/api.html","title":"JavaScript API","lang":"zh-CN","frontmatter":{"sidebarDepth":2},"headers":[{"level":2,"title":"build","slug":"build","link":"#build","children":[]},{"level":2,"title":"output","slug":"output","link":"#output","children":[]}],"git":{"updatedTime":1733483676000,"contributors":[{"name":"gang.peng","username":"gang.peng","email":"gang.peng@szyh.com","commits":1,"url":"https://github.com/gang.peng"}]},"filePathRelative":"advanced/rollup/api.md"}');export{c as comp,r as data};
