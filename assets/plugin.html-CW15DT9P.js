import{_ as s,c as a,a as p,o as t}from"./app-DzEwyuga.js";const e="/smile-website/images/rollup/image-20230919180002325.png",o="/smile-website/images/rollup/image-20230920110457237.png",l={};function c(i,n){return t(),a("div",null,n[0]||(n[0]=[p(`<h1 id="插件机制" tabindex="-1"><a class="header-anchor" href="#插件机制"><span>插件机制</span></a></h1><h2 id="rollup插件概述" tabindex="-1"><a class="header-anchor" href="#rollup插件概述"><span>Rollup插件概述</span></a></h2><blockquote><p>Rollup 插件是一个对象，具有 <a href="https://cn.rollupjs.org/plugin-development/#properties" target="_blank" rel="noopener noreferrer">属性</a>、<a href="https://cn.rollupjs.org/plugin-development/#build-hooks" target="_blank" rel="noopener noreferrer">构建钩子</a> 和 <a href="https://cn.rollupjs.org/plugin-development/#output-generation-hooks" target="_blank" rel="noopener noreferrer">输出生成钩子</a> 中的一个或多个，并遵循我们的 <a href="https://cn.rollupjs.org/plugin-development/#conventions" target="_blank" rel="noopener noreferrer">约定</a>。插件应作为一个导出一个函数的包进行发布，该函数可以使用插件特定的选项进行调用并返回此类对象。</p></blockquote><p>简单来说，rollup插件一般会做成一个函数，函数返回一个对象，返回的对象中包含一些属性和不同阶段的钩子函数。</p><h3 id="约定" tabindex="-1"><a class="header-anchor" href="#约定"><span>约定</span></a></h3><p>插件应该有一个明确的名称，并以<code>rollup-plugin-</code>作为前缀。</p><h3 id="属性" tabindex="-1"><a class="header-anchor" href="#属性"><span>属性</span></a></h3><p>name：插件的名称，用于在警告和错误消息中标识插件。</p><p>version：插件的版本</p><h2 id="钩子函数的特点" tabindex="-1"><a class="header-anchor" href="#钩子函数的特点"><span>钩子函数的特点</span></a></h2><ul><li>钩子函数区分不同的调用时机</li><li>钩子函数是有执行顺序的</li><li>钩子函数有不同的执行方式</li><li>钩子函数也可以是对象的形式</li><li>对象形式的钩子函数可以改变钩子的执行，让不同插件的同名钩子函数获取不通的执行先后</li></ul><h3 id="钩子函数的调用时机" tabindex="-1"><a class="header-anchor" href="#钩子函数的调用时机"><span>钩子函数的调用时机</span></a></h3><p>这里的调用时机，其实就是以我们上面的API，build和output两大工作流的不同阶段进行分类。根据这两个不同阶段，rollup提供的不同的函数让我们调用</p><ul><li>const bundle = await rollup.rollup(inputOptions) 执行期间的构建钩子函数 - <a href="https://cn.rollupjs.org/plugin-development/#build-hooks" target="_blank" rel="noopener noreferrer">build-hooks</a></li><li>await bundle.generate(outputOptions)/write(outputOptions) 执行期间的输出钩子函数-<a href="https://cn.rollupjs.org/plugin-development/#output-generation-hooks" target="_blank" rel="noopener noreferrer">output-generation-hooks</a></li></ul><h3 id="钩子函数的执行方式" tabindex="-1"><a class="header-anchor" href="#钩子函数的执行方式"><span>钩子函数的执行方式</span></a></h3><p>除了上面简单的划分为两个阶段的调用时机之外，我们还可以以钩子函数的执行方式来分类。</p><ul><li><code>async/sync</code>：异步/同步钩子，async标记的钩子可以返回一个解析为相同类型的值的 Promise；否则，该钩子被标记为 <code>sync</code>。</li><li><code>first</code>：如果有多个插件实现此钩子，则钩子按顺序运行，直到钩子返回一个不是 <code>null</code> 或 <code>undefined</code> 的值。</li><li><code>sequential</code>：如果有多个插件实现此钩子，则所有这些钩子将按指定的插件顺序运行。如果钩子是 <code>async</code>，则此类后续钩子将等待当前钩子解决后再运行。</li><li><code>parallel</code>：如果有多个插件实现此钩子，则所有这些钩子将按指定的插件顺序运行。如果钩子是 <code>async</code>，则此类后续钩子将并行运行，而不是等待当前钩子。</li></ul><h3 id="钩子函数也可以是对象" tabindex="-1"><a class="header-anchor" href="#钩子函数也可以是对象"><span>钩子函数也可以是对象</span></a></h3><p>除了函数之外，钩子也可以是对象。在这种情况下，实际的钩子函数（或 <code>banner/footer/intro/outro</code> 的值）必须指定为 <code>handler</code>。这允许你提供更多的可选属性，以改变钩子的执行：</p><ul><li>order: &quot;pre&quot; | &quot;post&quot; | null</li></ul><p>如果有多个插件实现此钩子，则可以先运行此插件（<code>&quot;pre&quot;</code>），最后运行此插件（<code>&quot;post&quot;</code>），或在用户指定的位置运行（没有值或 <code>null</code>）。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">resolveFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;resolve-first&#39;</span><span class="token punctuation">,</span></span>
<span class="line">		<span class="token literal-property property">resolveId</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">			<span class="token literal-property property">order</span><span class="token operator">:</span> <span class="token string">&#39;pre&#39;</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token function">handler</span><span class="token punctuation">(</span><span class="token parameter">source</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">				console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">				<span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line">		<span class="token punctuation">}</span></span>
<span class="line">	<span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="构建钩子执行顺序" tabindex="-1"><a class="header-anchor" href="#构建钩子执行顺序"><span>构建钩子执行顺序</span></a></h3><p><img src="`+e+`" alt="image-20230919180002325"></p><ol><li>通过 <code>options</code> 钩子读取配置，并进行配置的转换，得到处理后的配置对象</li><li>调用 <code>buildStart</code> 钩子，考虑了所有 <code>options</code>钩子配置的转换，包含未设置选项的正确默认值，正式开始构建流程</li><li>调用 <code>resolveId</code> 钩子解析模块文件路径。rollup中模块文件的id就是文件地址，所以，类似resolveId这种就是解析文件地址的意思。从<code>inputOption</code>的<code>input</code>配置指定的入口文件开始，每当匹配到引入外部模块的语句(如：<code>import moudleA from &#39;./moduleA&#39;</code>)便依次执行注册插件中的每一个 <code>resolveId</code> 钩子，直到某一个插件中的 <code>resolveId</code> 执行完后返回非 <code>null</code> 或非 <code>undefined</code> 的值，将停止执行后续插件的 <code>resolveId</code> 逻辑并进入下一个钩子</li><li>调用<code>load</code>钩子加载模块内容，<code>resolveId</code>中的路径一般为相对路径，load中的路径为处理之后的绝对路径</li><li>接着判断当前解析的模块是否存在缓存，若不存在则执行所有的 <code>transform</code> 钩子来对模块内容进行进行自定义的转换；若存在则判断<code>shouldTransformCachedModule</code>属性，true则执行所有的 <code>transform</code> 钩子，false则进入<code>moduleParsed</code>钩子逻辑</li><li>拿到最后的模块内容，进行 <code>AST</code> 分析，调用 <code>moduleParsed</code> 钩子。如果内部没有<code>imports</code>内容，进入<code>buildEnd</code>环节。如果还有<code>imports</code>内容则继续，如果是普通的 <code>import</code>，则执行<code>resolveId</code> 钩子，继续回到<strong>步骤3-调用resolveId</strong>；如果是动态 <code>import</code>，则执行<code>resolveDynamicImport</code> 钩子解析路径，如果解析成功，则回到<strong>步骤4-load</strong>加载模块，否则回到步骤3通过 <code>resolveId</code> 解析路径</li><li>直到所有的 <code>import</code> 都解析完毕，<code>Rollup</code> 执行<code>buildEnd</code>钩子，Build阶段结束</li></ol><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// rollup-plugin-example.js</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">myExample</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;my-example&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function">options</span> <span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;🎉 -- options:&quot;</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function">buildStart</span> <span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;✨ -- buildStart:&quot;</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function">resolveId</span> <span class="token punctuation">(</span><span class="token parameter">source<span class="token punctuation">,</span>importer</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;🚀 -- resolveId(source):&quot;</span><span class="token punctuation">,</span> source<span class="token punctuation">)</span></span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;🚀 -- resolveId(importer):&quot;</span><span class="token punctuation">,</span> importer<span class="token punctuation">)</span></span>
<span class="line">      <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span> </span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function">load</span> <span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;🌈 ~ id:&quot;</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span></span>
<span class="line">      <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span> </span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function">transform</span><span class="token punctuation">(</span><span class="token parameter">code<span class="token punctuation">,</span>id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> </span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;🌟 -- transform&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;---&quot;</span><span class="token punctuation">,</span>code<span class="token punctuation">)</span></span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;---&quot;</span><span class="token punctuation">,</span>id<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function">moduleParsed</span> <span class="token punctuation">(</span><span class="token parameter">info</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;⭐️ -- moduleParsed:&quot;</span><span class="token punctuation">,</span> info<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function">buildEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> </span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;😁 -- buildEnd&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="调用虚拟模块插件示例" tabindex="-1"><a class="header-anchor" href="#调用虚拟模块插件示例"><span>调用虚拟模块插件示例</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> virtualModuleId <span class="token operator">=</span> <span class="token string">&#39;virtual-module&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// rollup约定插件使用“虚拟模块”，使用\\0前缀模块 ID。这可以防止其他插件尝试处理它。</span></span>
<span class="line"><span class="token keyword">const</span> resolvedVirtualModuleId <span class="token operator">=</span> <span class="token string">&#39;\\0&#39;</span> <span class="token operator">+</span> virtualModuleId<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">virtualModule</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;virtual-module&#39;</span><span class="token punctuation">,</span> </span>
<span class="line">    <span class="token function">resolveId</span> <span class="token punctuation">(</span><span class="token parameter">source</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>source <span class="token operator">===</span> <span class="token string">&#39;virtual-module&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> </span>
<span class="line">        <span class="token keyword">return</span> resolvedVirtualModuleId<span class="token punctuation">;</span> <span class="token comment">// 告诉Rollup，这个ID是外部模块，不要在此处查找它</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">// 其他ID应按通常方式处理</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function">load</span> <span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;🌈 - id:&quot;</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>id <span class="token operator">===</span> resolvedVirtualModuleId<span class="token punctuation">)</span> <span class="token punctuation">{</span> </span>
<span class="line">        <span class="token comment">// return &#39;export default &quot;This is virtual!&quot;&#39;; // 告诉Rollup，如何加载此模块</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&#39;export default function fib(n) { return n &lt;= 1 ? n : fib(n - 1) + fib(n - 2); }&#39;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">// 其他ID应按通常方式处理</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>界面调用</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> fib <span class="token keyword">from</span> <span class="token string">&quot;virtual-module&quot;</span><span class="token punctuation">;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">fib</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="json插件示例" tabindex="-1"><a class="header-anchor" href="#json插件示例"><span>JSON插件示例</span></a></h4><p>rollup默认是不能直接读取json文件的内容的，我们自己写一个插件处理一下，不过写这个插件之前，有一些小知识点需要补充一下</p><p><a href="https://github.com/rollup/plugins/tree/master/packages/pluginutils" target="_blank" rel="noopener noreferrer">@rollup/pluginutils</a> rollup官方提供的工具插件,里面有一些制作插件常用的方法</p><p><strong>安装</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">pnpm add @rollup<span class="token operator">/</span>plugin<span class="token operator">-</span>commonjs @rollup<span class="token operator">/</span>plugin<span class="token operator">-</span>node<span class="token operator">-</span>resolve @rollup<span class="token operator">/</span>pluginutils <span class="token operator">-</span><span class="token constant">D</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><a href="https://cn.rollupjs.org/plugin-development/#plugin-context" target="_blank" rel="noopener noreferrer">插件上下文</a></p><p>这个其实也是插件中很常用的一些api，可以通过 <code>this</code> 从大多数<a href="https://cn.rollupjs.org/plugin-development/#build-hooks" target="_blank" rel="noopener noreferrer">钩子</a>中访问一些实用函数和信息位</p><p><strong>rollup-plugin-json</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> createFilter<span class="token punctuation">,</span>dataToEsm <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@rollup/pluginutils&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> path <span class="token keyword">from</span> <span class="token string">&#39;path&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">myJson</span><span class="token punctuation">(</span><span class="token parameter">options <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// createFilter 返回一个函数，这个函数接收一个id路径参数，返回一个布尔值</span></span>
<span class="line">  <span class="token comment">// 这个布尔值表示是否要处理这个id路径</span></span>
<span class="line">  <span class="token comment">// rollup 推荐每一个 transform 类型的插件都需要提供 include 和 exclude 选项，生成过滤规则</span></span>
<span class="line">  <span class="token keyword">const</span> filter <span class="token operator">=</span> <span class="token function">createFilter</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>include<span class="token punctuation">,</span> options<span class="token punctuation">.</span>exclude<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;rollup-plugin-json&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">transform</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">order</span><span class="token operator">:</span> <span class="token string">&quot;pre&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token function">handler</span><span class="token punctuation">(</span><span class="token parameter">code<span class="token punctuation">,</span> id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">filter</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token operator">||</span> path<span class="token punctuation">.</span><span class="token function">extname</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token string">&#39;.json&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token keyword">const</span> parse <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">          <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// dataToEsm 将数据转换成esm模块</span></span>
<span class="line">            <span class="token comment">// 其实就是 export default &quot;xxx&quot;</span></span>
<span class="line">            <span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token function">dataToEsm</span><span class="token punctuation">(</span>parse<span class="token punctuation">)</span><span class="token punctuation">,</span> </span>
<span class="line">            <span class="token literal-property property">map</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">mappings</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span> <span class="token punctuation">}</span></span>
<span class="line">          <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span> </span>
<span class="line">          <span class="token keyword">const</span> message <span class="token operator">=</span> <span class="token string">&#39;Could not parse JSON file&#39;</span><span class="token punctuation">;</span></span>
<span class="line">          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token punctuation">{</span> message<span class="token punctuation">,</span> id<span class="token punctuation">,</span> <span class="token literal-property property">cause</span><span class="token operator">:</span> err <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">          <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>界面调用</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> pkg <span class="token keyword">from</span> <span class="token string">&quot;../package.json&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> test <span class="token keyword">from</span> <span class="token string">&quot;../test.json&quot;</span><span class="token punctuation">;</span> <span class="token comment">// 错误json格式演示</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pkg<span class="token punctuation">.</span>name<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="插件上下文" tabindex="-1"><a class="header-anchor" href="#插件上下文"><span><a href="https://cn.rollupjs.org/plugin-development/#plugin-context" target="_blank" rel="noopener noreferrer">插件上下文</a></span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> createFilter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@rollup/pluginutils&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">customPlugin</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> filter <span class="token operator">=</span> <span class="token function">createFilter</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>include<span class="token punctuation">,</span> options<span class="token punctuation">.</span>exclude<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;custom-plugin&#39;</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">transform</span><span class="token punctuation">(</span><span class="token parameter">code<span class="token punctuation">,</span> id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">filter</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">      <span class="token keyword">const</span> parsedCode <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 解析代码,获取AST</span></span>
<span class="line"></span>
<span class="line">      <span class="token keyword">const</span> source <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>code<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n\\n</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>parsedCode<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line">      </span>
<span class="line">      <span class="token keyword">const</span> fileName <span class="token operator">=</span> id<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>emitFile<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">emitFile</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">          <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;asset&#39;</span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token literal-property property">fileName</span><span class="token operator">:</span> fileName <span class="token operator">+</span> <span class="token string">&#39;.txt&#39;</span><span class="token punctuation">,</span></span>
<span class="line">          source<span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="图片读取" tabindex="-1"><a class="header-anchor" href="#图片读取"><span>图片读取</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> createFilter<span class="token punctuation">,</span>dataToEsm <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@rollup/pluginutils&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> extname<span class="token punctuation">,</span>resolve<span class="token punctuation">,</span>basename<span class="token punctuation">,</span>relative<span class="token punctuation">,</span>normalize<span class="token punctuation">,</span>sep <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;path&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> fs <span class="token keyword">from</span> <span class="token string">&quot;fs&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> svgToMiniDataURI <span class="token keyword">from</span> <span class="token string">&quot;mini-svg-data-uri&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> defaults <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">fileSize</span><span class="token operator">:</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">4</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token string">&quot;./dist&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">include</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> mimeTypes <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token string-property property">&quot;.png&quot;</span><span class="token operator">:</span> <span class="token string">&quot;image/png&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string-property property">&quot;.jpg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;image/jpeg&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string-property property">&quot;.jpeg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;image/jpeg&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string-property property">&quot;.gif&quot;</span><span class="token operator">:</span> <span class="token string">&quot;image/gif&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string-property property">&quot;.svg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;image/svg+xml&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string-property property">&quot;.ico&quot;</span><span class="token operator">:</span> <span class="token string">&quot;image/x-icon&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string-property property">&quot;.webp&quot;</span><span class="token operator">:</span> <span class="token string">&quot;image/webp&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string-property property">&quot;.avif&quot;</span><span class="token operator">:</span> <span class="token string">&quot;image/avif&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> <span class="token function-variable function">getDataUri</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> format<span class="token punctuation">,</span> isSvg<span class="token punctuation">,</span> mime<span class="token punctuation">,</span> source <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span></span>
<span class="line">  isSvg <span class="token operator">?</span> <span class="token function">svgToMiniDataURI</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">data:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>mime<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>format<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>source<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> <span class="token function-variable function">ensureDirExists</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">dirPath</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> </span>
<span class="line">  <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">await</span> fs<span class="token punctuation">.</span>promises<span class="token punctuation">.</span><span class="token function">access</span><span class="token punctuation">(</span>dirPath<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span> </span>
<span class="line">    <span class="token comment">// 文件夹不存在就创建文件夹</span></span>
<span class="line">    <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">await</span> fs<span class="token punctuation">.</span>promises<span class="token punctuation">.</span><span class="token function">mkdir</span><span class="token punctuation">(</span>dirPath<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">recursive</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span> </span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">myImage</span><span class="token punctuation">(</span><span class="token parameter">opts <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span> </span>
<span class="line">  <span class="token keyword">const</span> options <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> defaults<span class="token punctuation">,</span> opts<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> filter <span class="token operator">=</span> <span class="token function">createFilter</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>include<span class="token punctuation">,</span> options<span class="token punctuation">.</span>exclude<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;my-image&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">async</span> <span class="token function">transform</span><span class="token punctuation">(</span><span class="token parameter">code<span class="token punctuation">,</span> id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> </span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">filter</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line">      </span>
<span class="line">      <span class="token comment">// 获取后缀</span></span>
<span class="line">      <span class="token keyword">const</span> ext <span class="token operator">=</span> <span class="token function">extname</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token comment">// 判断是否是图片</span></span>
<span class="line">      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>mimeTypes<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>ext<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">      <span class="token comment">// 获取图片的mime类型</span></span>
<span class="line">      <span class="token keyword">const</span> mime <span class="token operator">=</span> mimeTypes<span class="token punctuation">[</span>ext<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token comment">// 判断是否svg</span></span>
<span class="line">      <span class="token keyword">const</span> isSvg <span class="token operator">=</span> mime <span class="token operator">===</span> mimeTypes<span class="token punctuation">[</span><span class="token string">&quot;.svg&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token comment">// 图片format格式</span></span>
<span class="line">      <span class="token keyword">const</span> format <span class="token operator">=</span> isSvg <span class="token operator">?</span> <span class="token string">&quot;utf-8&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;base64&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">      <span class="token comment">// 目标路径</span></span>
<span class="line">      <span class="token keyword">const</span> assetsPath <span class="token operator">=</span> <span class="token function">resolve</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> options<span class="token punctuation">.</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;---&quot;</span><span class="token punctuation">,</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;---&quot;</span><span class="token punctuation">,</span>options<span class="token punctuation">.</span>target<span class="token punctuation">)</span></span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;---&quot;</span><span class="token punctuation">,</span> assetsPath<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">      <span class="token comment">//获取文件名</span></span>
<span class="line">      <span class="token keyword">const</span> fileName <span class="token operator">=</span> <span class="token function">basename</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token comment">// 最终文件路径</span></span>
<span class="line">      <span class="token keyword">const</span> filePath <span class="token operator">=</span> <span class="token function">resolve</span><span class="token punctuation">(</span>assetsPath<span class="token punctuation">,</span> fileName<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;===&quot;</span><span class="token punctuation">,</span> filePath<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">      <span class="token keyword">let</span> relativePath <span class="token operator">=</span> <span class="token function">normalize</span><span class="token punctuation">(</span><span class="token function">relative</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> filePath<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      relativePath <span class="token operator">=</span> relativePath<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>relativePath<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>sep<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>relativePath<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">      <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// 如果图片文件过大，就应该直接拷贝文件，返回文件路径</span></span>
<span class="line">        <span class="token comment">// 读取图片文件大小与设置的大小进行比较</span></span>
<span class="line">        <span class="token keyword">const</span> stat <span class="token operator">=</span> <span class="token keyword">await</span> fs<span class="token punctuation">.</span>promises<span class="token punctuation">.</span><span class="token function">stat</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>stat<span class="token punctuation">.</span>size <span class="token operator">&gt;</span> options<span class="token punctuation">.</span>fileSize<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token comment">// 文件的拷贝，以及对象的返回</span></span>
<span class="line">          <span class="token comment">// 文件拷贝，无非就是文件源路径，目标路径</span></span>
<span class="line">          <span class="token comment">//copyFile 拷贝文件地址的文件夹必须存在</span></span>
<span class="line">          <span class="token comment">// 如果文件夹不存在，那么就创建文件夹</span></span>
<span class="line">          <span class="token keyword">const</span> dirExists <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">ensureDirExists</span><span class="token punctuation">(</span>assetsPath<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">          dirExists <span class="token operator">&amp;&amp;</span> <span class="token keyword">await</span> fs<span class="token punctuation">.</span>promises<span class="token punctuation">.</span><span class="token function">copyFile</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> filePath<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">          <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token function">dataToEsm</span><span class="token punctuation">(</span>relativePath<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">//返回拷贝之后处理的路径</span></span>
<span class="line">            <span class="token literal-property property">map</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">mappings</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">}</span></span>
<span class="line">          <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token comment">// 否则转换为base64格式</span></span>
<span class="line">          <span class="token comment">// 读取文件</span></span>
<span class="line">          <span class="token keyword">const</span> source <span class="token operator">=</span> <span class="token keyword">await</span> fs<span class="token punctuation">.</span>promises<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> format<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">          <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token function">dataToEsm</span><span class="token punctuation">(</span><span class="token function">getDataUri</span><span class="token punctuation">(</span><span class="token punctuation">{</span> format<span class="token punctuation">,</span> isSvg<span class="token punctuation">,</span> mime<span class="token punctuation">,</span> source <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token literal-property property">map</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">mappings</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">}</span></span>
<span class="line">          <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span> </span>
<span class="line">        <span class="token keyword">const</span> message <span class="token operator">=</span> <span class="token string">&quot;图片转换失败:&quot;</span> <span class="token operator">+</span> id<span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token punctuation">{</span> message<span class="token punctuation">,</span> id<span class="token punctuation">,</span> <span class="token literal-property property">cause</span><span class="token operator">:</span> err <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="输出钩子执行顺序" tabindex="-1"><a class="header-anchor" href="#输出钩子执行顺序"><span>输出钩子执行顺序</span></a></h3><p><img src="`+o+`" alt="image-20230920110457237"></p><ol><li>执行所有插件的 <code>outputOptions</code> 钩子函数，对 <code>output</code> 配置进行转换</li><li>执行 <code>renderStart</code>，该钩子读取所有outputOptions钩子的转换之后的输出选项</li><li>扫描 <code>动态import</code> 语句执行 <code>renderDynamicImport</code> 钩子，让开发者能自定义<code>动态import</code>的内容与行为</li><li>并发执行所有插件的 <code>banner、footer、intro、outro</code> 钩子，这四个钩子功能简单，就是往打包产物的固定位置(比如头部和尾部)插入一些自定义的内容，比如版本号、作者、内容、项目介绍等等</li><li>是否存在 <code>import.meta</code> 语句，没有就直接进入下一步，否则：对于<code>import.meta.url</code>调用 <code>resolveFileUrl</code> 来自定义 url 解析逻辑。对于<code>import.meta</code>调用 <code>resolveImportMeta</code> 来进行自定义元信息解析</li><li>生成chunk调用<code>renderChunk</code>钩子，便于在该钩子中进行自定义操作。如果生成的chunk文件有hash值，执行 <code>augmentChunkHash</code> 钩子，来决定是否更改 <code>chunk</code> 的哈希值。</li><li>调用 <code>generateBundle</code> 钩子，这个钩子的入参里面会包含所有的打包产物信息，包括 <code>chunk</code> (打包后的代码)、<code>asset</code>(最终的静态资源文件)。在这个钩子中你做自定义自己的操作，比如：可以在这里删除一些 <code>chunk</code> 或者 <code>asset</code>，最终被删除的内容将不会作为产物输出</li><li>上节课讲解的javascript api---<code>rollup.rollup</code>方法会返回一个<code>bundle</code>对象，<code>bundle</code>对象的write方法，会触发<code>writeBundle</code>钩子，传入所有的打包产物信息，包括 <code>chunk</code> 和 <code>asset</code>，与<code>generateBundle</code>钩子非常相似。唯一的区别是<code>writeBundle</code>钩子执行的时候，产物已经输出了。而 <code>generateBundle</code> 执行的时候产物还并没有输出。简单来说，顺序是：<code>generateBundle---&gt;输出并保存产物到磁盘---&gt;writeBundle</code></li><li>当<code>bundle</code>的<code>close</code>方法被调用时，会触发<code>closeBundle</code>钩子，这个output阶段结束</li></ol><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">myExample2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;my-example2&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function">outputOptions</span> <span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;🎉 ~ options:&quot;</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function">renderStart</span> <span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;✨ ~ renderStart:&quot;</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function">renderDynamicImport</span> <span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;✨~ renderDynamicImport:&quot;</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function">banner</span><span class="token punctuation">(</span><span class="token parameter">chunk</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> </span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;🔥 ~ banner(chunk):&quot;</span><span class="token punctuation">,</span> chunk<span class="token punctuation">)</span></span>
<span class="line">      <span class="token keyword">const</span> comment <span class="token operator">=</span> chunk<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">&quot;index&quot;</span> <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/*</span>
<span class="line">* </span>
<span class="line">* 　　┏┓　　　┏┓+ +</span>
<span class="line">* 　┏┛┻━━━┛┻┓ + +</span>
<span class="line">* 　┃　　　　　　　┃ 　</span>
<span class="line">* 　┃　　　━　　　┃ ++ + + +</span>
<span class="line">*  ████━████ ┃+</span>
<span class="line">* 　┃　　　　　　　┃ +</span>
<span class="line">* 　┃　　　┻　　　┃</span>
<span class="line">* 　┃　　　　　　　┃ + +</span>
<span class="line">* 　┗━┓　　　┏━┛</span>
<span class="line">* 　　　┃　　　┃　　　　　　　　　　　</span>
<span class="line">* 　　　┃　　　┃ + + + +</span>
<span class="line">* 　　　┃　　　┃</span>
<span class="line">* 　　　┃　　　┃ +  神兽保佑</span>
<span class="line">* 　　　┃　　　┃    代码无bug　　</span>
<span class="line">* 　　　┃　　　┃　　+　　　　　　　　　</span>
<span class="line">* 　　　┃　 　　┗━━━┓ + +</span>
<span class="line">* 　　　┃ 　　　　　　　┣┓</span>
<span class="line">* 　　　┃ 　　　　　　　┏┛</span>
<span class="line">* 　　　┗┓┓┏━┳┓┏┛ + + + +</span>
<span class="line">* 　　　　┃┫┫　┃┫┫</span>
<span class="line">* 　　　　┗┻┛　┗┻┛+ + + +</span>
<span class="line">* </span>
<span class="line">*/</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">return</span> comment<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function">renderChunk</span> <span class="token punctuation">(</span><span class="token parameter">source</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;🚀 ~ source:&quot;</span><span class="token punctuation">,</span> source<span class="token punctuation">)</span></span>
<span class="line">      <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span> </span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function">augmentChunkHash</span> <span class="token punctuation">(</span><span class="token parameter">chunk</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;🎉 ~ augmentChunkHash:&quot;</span><span class="token punctuation">,</span> chunk<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function">generateBundle</span><span class="token punctuation">(</span><span class="token parameter">options<span class="token punctuation">,</span> bundle</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> </span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;🌈 ~ options:&quot;</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span></span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;🌈 ~ bundle:&quot;</span><span class="token punctuation">,</span> bundle<span class="token punctuation">)</span></span>
<span class="line">      Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>bundle<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> </span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>key<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&quot;sum&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> </span>
<span class="line">          <span class="token comment">//删除对象中的这个键值对</span></span>
<span class="line">          <span class="token keyword">delete</span> bundle<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function">closeBundle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> </span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;😁 ~ closeBundle&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="打包大小和时间示例" tabindex="-1"><a class="header-anchor" href="#打包大小和时间示例"><span>打包大小和时间示例：</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">bundleStats</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">let</span> startTime<span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;bundle-stats&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function">options</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      startTime <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function">generateBundle</span><span class="token punctuation">(</span><span class="token parameter">_<span class="token punctuation">,</span> bundle</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">const</span> fileSizes <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token punctuation">[</span>fileName<span class="token punctuation">,</span> output<span class="token punctuation">]</span> <span class="token keyword">of</span> Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>bundle<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>output<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">&#39;chunk&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token keyword">const</span> content <span class="token operator">=</span> output<span class="token punctuation">.</span>code<span class="token punctuation">;</span></span>
<span class="line">          <span class="token keyword">const</span> size <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">byteLength</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">          <span class="token keyword">const</span> sizeInKB <span class="token operator">=</span> <span class="token punctuation">(</span>size <span class="token operator">/</span> <span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">          fileSizes<span class="token punctuation">[</span>fileName<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>sizeInKB<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> KB</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Bundle Stats:&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;-------------&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;File Sizes:&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fileSizes<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;-------------&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function">closeBundle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">const</span> totalTime <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> startTime<span class="token punctuation">;</span></span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Total Bundle Time: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>totalTime<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> ms</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;-------------&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="代码压缩" tabindex="-1"><a class="header-anchor" href="#代码压缩"><span>代码压缩</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> minify <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;uglify-js&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">uglifyPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;uglify&#39;</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">renderChunk</span><span class="token punctuation">(</span><span class="token parameter">code</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">minify</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">minify error: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>result<span class="token punctuation">.</span>error<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">code</span><span class="token operator">:</span> result<span class="token punctuation">.</span>code<span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">map</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">mappings</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span> <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,53)]))}const r=s(l,[["render",c],["__file","plugin.html.vue"]]),k=JSON.parse('{"path":"/advanced/rollup/plugin.html","title":"插件机制","lang":"zh-CN","frontmatter":{"sidebarDepth":2},"headers":[{"level":2,"title":"Rollup插件概述","slug":"rollup插件概述","link":"#rollup插件概述","children":[{"level":3,"title":"约定","slug":"约定","link":"#约定","children":[]},{"level":3,"title":"属性","slug":"属性","link":"#属性","children":[]}]},{"level":2,"title":"钩子函数的特点","slug":"钩子函数的特点","link":"#钩子函数的特点","children":[{"level":3,"title":"钩子函数的调用时机","slug":"钩子函数的调用时机","link":"#钩子函数的调用时机","children":[]},{"level":3,"title":"钩子函数的执行方式","slug":"钩子函数的执行方式","link":"#钩子函数的执行方式","children":[]},{"level":3,"title":"钩子函数也可以是对象","slug":"钩子函数也可以是对象","link":"#钩子函数也可以是对象","children":[]},{"level":3,"title":"构建钩子执行顺序","slug":"构建钩子执行顺序","link":"#构建钩子执行顺序","children":[]},{"level":3,"title":"输出钩子执行顺序","slug":"输出钩子执行顺序","link":"#输出钩子执行顺序","children":[]}]}],"git":{"updatedTime":1733483676000,"contributors":[{"name":"gang.peng","username":"gang.peng","email":"gang.peng@szyh.com","commits":1,"url":"https://github.com/gang.peng"}]},"filePathRelative":"advanced/rollup/plugin.md"}');export{r as comp,k as data};
