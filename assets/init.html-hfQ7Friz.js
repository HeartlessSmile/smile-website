import{_ as o,c as i,a as e,b as a,d as s,e as p,f as l,r as c,o as d}from"./app-DzEwyuga.js";const u={};function r(k,n){const t=c("RouteLink");return d(),i("div",null,[n[8]||(n[8]=e('<h1 id="初始化" tabindex="-1"><a class="header-anchor" href="#初始化"><span>初始化</span></a></h1><p>在编写初始化代码之前，我们先来思考，初始化应该包含哪些步骤</p><ol><li>实例化sdk</li><li>根据传参初始化数据结构</li><li>加载插件，并按加载顺序执行插件的init方法</li></ol><p>接下来我们安装这个步骤，梳理我们的初始化部分的代码。</p><h2 id="实例化sdk" tabindex="-1"><a class="header-anchor" href="#实例化sdk"><span>实例化sdk</span></a></h2><p>首先思考一个问题，为什么要实例化，换句话说，我使用关键字 <code>new</code> 的意义是什么？</p><p>答案其实很简单，为了方便后续代码以及插件中能够使用 <code>Beaconify</code> 原型上的东西，如<code>this</code>写法</p>',7)),a("p",null,[n[1]||(n[1]=s("那么，我们现在有两个选择，使用 ")),n[2]||(n[2]=a("code",null,"Class",-1)),n[3]||(n[3]=s(" 或者 ")),n[4]||(n[4]=a("code",null,"Function",-1)),n[5]||(n[5]=s(" 的写法，这里采用")),n[6]||(n[6]=a("code",null,"Function",-1)),n[7]||(n[7]=s("的方式。")),p(t,{to:"/monitor/sdk/optimize.html#%E4%BD%93%E7%A7%AF%E4%BC%98%E5%8C%96"},{default:l(()=>n[0]||(n[0]=[s("这是原因")])),_:1})]),n[9]||(n[9]=e(`<p>说到<code>Function</code>的方式去 <code>new</code> 一个构造函数出来，你会想到什么，我第一反应是 <code>Vue2</code> 的<a href="https://github.com/vuejs/vue/blob/49b6bd4264c25ea41408f066a1835f38bf6fe9f1/src/core/instance/index.ts#L9" target="_blank" rel="noopener noreferrer">源码实现</a>。所以我们的初始化代码出现了。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">function</span> <span class="token function">Beaconify</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token keyword">instanceof</span> <span class="token class-name">Beaconify</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;Beaconify is a constructor and should be called with the \`new\` keyword&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_init</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> Beaconify<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="制定传入参数" tabindex="-1"><a class="header-anchor" href="#制定传入参数"><span>制定传入参数</span></a></h2><p>上述代码很明显，我们需要传一个配置参数进来，那它应该有哪些属性，我们可以罗列下</p><ul><li><code>debug: boolean</code> 是否开启debug模式，默认为false，debug模式中，可以看到更多的日志，方便第三方插件开发及后续梳理代码</li><li><code>dsn: string</code> 必填项，数据发送的后端地址，由域名和项目key构成，列如: https://examplePublicKey@baidu.com/0</li><li><code>plugins: Array&lt;string&gt;</code> 必填项，后续调用插件列表（尚未定义plugins类型，后续替换），由于项目插件化结构以及适配多场景，所以收集数据能力均由各插件提供，无插件无法使用</li></ul>`,5))])}const f=o(u,[["render",r],["__file","init.html.vue"]]),b=JSON.parse('{"path":"/monitor/sdk/init.html","title":"初始化","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"实例化sdk","slug":"实例化sdk","link":"#实例化sdk","children":[]},{"level":2,"title":"制定传入参数","slug":"制定传入参数","link":"#制定传入参数","children":[]}],"git":{"updatedTime":1733483676000,"contributors":[{"name":"gang.peng","username":"gang.peng","email":"gang.peng@szyh.com","commits":1,"url":"https://github.com/gang.peng"}]},"filePathRelative":"monitor/sdk/init.md"}');export{f as comp,b as data};
