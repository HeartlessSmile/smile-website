import{_ as n,c as a,a as e,o as p}from"./app-DzEwyuga.js";const t={};function l(o,s){return p(),a("div",null,s[0]||(s[0]=[e(`<h1 id="使用插件" tabindex="-1"><a class="header-anchor" href="#使用插件"><span>使用插件</span></a></h1><p>到目前为止，我们已经用入口文件和通过相对路径导入的模块打了一个简单的包。随着你需要打包更复杂的代码，通常需要更灵活的配置，例如导入使用 NPM 安装的模块、使用 Babel 编译代码、处理 JSON 文件等等。</p><p>插件列表 ： <a href="https://github.com/rollup/awesome" target="_blank" rel="noopener noreferrer">the Rollup Awesome List</a>。</p><h2 id="rollup-plugin-node-resolve" tabindex="-1"><a class="header-anchor" href="#rollup-plugin-node-resolve"><span><a href="https://github.com/rollup/plugins/tree/master/packages/node-resolve" target="_blank" rel="noopener noreferrer">@rollup/plugin-node-resolve</a></span></a></h2><p>比如我们现在引入lodash-es库</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">pnpm</span> <span class="token function">add</span> lodash-es <span class="token parameter variable">-D</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>在index.js中使用</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> chunk <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;lodash-es&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> r <span class="token operator">=</span> <span class="token function">chunk</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;🚀 ~ r:&quot;</span><span class="token punctuation">,</span> r<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在直接打包</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;rollup&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>RollupOptions<span class="token punctuation">}</span></span></span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">const</span> buildIndexOptions <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">input</span><span class="token operator">:</span> <span class="token string">&#39;src/index.js&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">dir</span><span class="token operator">:</span> <span class="token string">&#39;dist/esm/&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">format</span><span class="token operator">:</span> <span class="token string">&#39;esm&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> buildIndexOptions</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>会出现下面的警告：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">src/index.js → dist/esm/<span class="token punctuation">..</span>.</span>
<span class="line"><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">)</span> Unresolved dependencies</span>
<span class="line">https://rollupjs.org/troubleshooting/<span class="token comment">#warning-treating-module-as-external-dependency</span></span>
<span class="line">lodash-es <span class="token punctuation">(</span>imported by <span class="token string">&quot;src/index.js&quot;</span><span class="token punctuation">)</span></span>
<span class="line">created dist/esm/ <span class="token keyword">in</span> 13ms</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>意思是，不能解析<code>lodash-es</code>这个依赖，报出了警告，问你是不是需要<code>external</code>，并提示你点击链接有这个警告的解释。当我们点击这个链接，按照提示解决这个external警告问题，很简单，就加上external，也就是把<code>lodash-es</code>这个库给排除出去</p><div class="language-diff line-numbers-mode" data-highlighter="prismjs" data-ext="diff" data-title="diff"><pre><code><span class="line">const buildIndexOptions = {</span>
<span class="line"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> input: &#39;src/index.js&#39;,</span>
<span class="line"></span><span class="token prefix unchanged"> </span><span class="token line"> output: {</span>
<span class="line"></span><span class="token prefix unchanged"> </span><span class="token line">   dir: &#39;dist/esm/&#39;,</span>
<span class="line"></span><span class="token prefix unchanged"> </span><span class="token line">   format: &#39;esm&#39;,</span>
<span class="line"></span><span class="token prefix unchanged"> </span><span class="token line"> },</span>
<span class="line"></span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  external: [&#39;lodash-es&#39;]</span>
<span class="line"></span></span>}</span>
<span class="line">export default buildIndexOptions</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>再此打包，果然没警告了，而且我们在nodejs环境中确实也能正常运行了</p><blockquote><p><strong>注意：对于没有太多开发经验的同学来说，这里感觉问题解决了，但是需要理解为什么</strong></p><p><strong>注意：对于没有太多开发经验的同学来说，这里感觉问题解决了，但是需要理解为什么</strong></p><p><strong>注意：对于没有太多开发经验的同学来说，这里感觉问题解决了，但是需要理解为什么</strong></p></blockquote><p>重要的事情说三遍，这里虽然看似一个很小的问题，但是却有很多基本理论点</p><p>1、rollup默认只能解析导入的相对路径，也就是<code>/</code> ， <code>./</code>或者<code>../</code>开头的路径，对于<code>bare import</code>，也就是<code>import { chunk } from &#39;lodash-es&#39;;</code>这种直接导入的第三方包的格式，并不支持</p><p>2、<code>rollup</code>相比<code>webpack</code>最大的优势并不是构建一个足够大的应用打包，大多是情况下，我们使用<code>rollup</code>用来构建工具库，因此，这里导入的<code>lodash-es</code>并没有报错，而仅仅报出警告，因为<code>rollup</code>认为<code>lodash-es</code>这个库并没有加入构建，那么你的意思是将来用作第三方库来使用，因此将<code>lodash-es</code>使用配置<code>external</code>排除掉就好。</p><p>3、<code>lodash-es</code>这个包本身就是支持ESM的</p><p>4、最后打包好的<code>index.js</code>文件只所以在<code>nodejs</code>环境下运行，是因为<code>nodejs</code>可以帮我们解析<code>bare import</code>，我们可以试着将<code>index.js</code>放入到<code>html</code>文件中运行，你就可以看到其中的问题所在，在html环境中就会报错了：<code>index.html:1 Uncaught TypeError: Failed to resolve module specifier &quot;lodash-es&quot;. Relative references must start with either &quot;/&quot;, &quot;./&quot;, or &quot;../&quot;.</code></p><p>如果希望在最后的打包中，将<code>lodash-es</code>内容解析打包进去，就可以使用<code>@rollup/plugin-node-resolve</code></p><p><strong>安装:</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">pnpm</span> <span class="token function">add</span> @rollup/plugin-node-resolve --save-dev</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>使用：</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> nodeResolve <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@rollup/plugin-node-resolve&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;rollup&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>RollupOptions<span class="token punctuation">}</span></span></span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">const</span> buildIndexOptions <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">input</span><span class="token operator">:</span> <span class="token string">&#39;src/index.js&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">dir</span><span class="token operator">:</span> <span class="token string">&#39;dist/esm/&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">format</span><span class="token operator">:</span> <span class="token string">&#39;esm&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">nodeResolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span></span>
<span class="line">  <span class="token comment">// external: [&#39;lodash-es&#39;]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> buildIndexOptions</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在，再此进行打包，无论是打包时间，还是打包内容和之前都很不一样了，把<code>lodash-es</code>中，关于<code>chunk()</code>函数的内容，都打包进了<code>index.js</code>文件中</p><h2 id="output-manualchunks" tabindex="-1"><a class="header-anchor" href="#output-manualchunks"><span><a href="https://cn.rollupjs.org/configuration-options/#output-manualchunks" target="_blank" rel="noopener noreferrer">output.manualChunks</a></span></a></h2><p>上面讲了对于动态加载模块，rollup帮我们自动做了代码分割，其实我们也可以手动的操作，直接在rollup配置中声明</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> buildIndexOptions <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">input</span><span class="token operator">:</span> <span class="token string">&#39;src/index.js&#39;</span><span class="token punctuation">,</span>  </span>
<span class="line">  <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">dir</span><span class="token operator">:</span> <span class="token string">&#39;dist/esm/&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">format</span><span class="token operator">:</span> <span class="token string">&#39;esm&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">entryFileNames</span><span class="token operator">:</span> <span class="token string">&#39;[name].js&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">chunkFileNames</span><span class="token operator">:</span> <span class="token string">&#39;chunk-[name]-[hash].js&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">manualChunks</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token string-property property">&#39;lodash-es&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;lodash-es&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token comment">//也可以是函数形式</span></span>
<span class="line">    <span class="token comment">// manualChunks(id){</span></span>
<span class="line">    <span class="token comment">//   if(id.includes(&#39;lodash-es&#39;)){</span></span>
<span class="line">    <span class="token comment">//     return &#39;lodash-es&#39;</span></span>
<span class="line">    <span class="token comment">//   }</span></span>
<span class="line">    <span class="token comment">// }</span></span>
<span class="line">	<span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">nodeResolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="rollup-plugin-commonjs" tabindex="-1"><a class="header-anchor" href="#rollup-plugin-commonjs"><span><a href="https://github.com/rollup/plugins/tree/master/packages/commonjs" target="_blank" rel="noopener noreferrer">@rollup/plugin-commonjs</a></span></a></h2><p>上面最开始导入<code>lodash-es</code>，没有加入<code>external</code>和<code>plugins</code>，之所以还能直接运行，还因为<code>lodash-es</code>本身就是支持ESM的，因为rollup默认并不支持Commonjs模块化，比如将lodash-es换位lodash，马上就能看到不一样的效果,直接打包失败</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token punctuation">[</span><span class="token operator">!</span><span class="token punctuation">]</span> RollupError<span class="token operator">:</span> <span class="token string">&quot;chunk&quot;</span> is not exported by <span class="token string">&quot;node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/lodash.js&quot;</span><span class="token punctuation">,</span> imported by <span class="token string">&quot;src/index.js&quot;</span><span class="token punctuation">.</span></span>
<span class="line"><span class="token literal-property property">https</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>rollupjs<span class="token punctuation">.</span>org<span class="token operator">/</span>troubleshooting<span class="token operator">/</span>#error<span class="token operator">-</span>name<span class="token operator">-</span>is<span class="token operator">-</span>not<span class="token operator">-</span>exported<span class="token operator">-</span>by<span class="token operator">-</span>module</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>这个错误在官网上解释的很清楚了，无非就是commonjs没有这种导出，因此我们需要<code>@rollup/plugin-commonjs</code>帮我们处理commonjs模块化的问题</p><p><strong>安装:</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">pnpm</span> <span class="token function">add</span> @rollup/plugin-commonjs --save-dev</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>使用:</strong></p><div class="language-diff line-numbers-mode" data-highlighter="prismjs" data-ext="diff" data-title="diff"><pre><code><span class="line">import { nodeResolve } from &#39;@rollup/plugin-node-resolve&#39;;</span>
<span class="line"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import commonjs from &#39;@rollup/plugin-commonjs&#39;;</span>
<span class="line"></span></span>/**</span>
<span class="line"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">* @type {import(&#39;rollup&#39;).RollupOptions}</span>
<span class="line"></span><span class="token prefix unchanged"> </span><span class="token line">*/</span>
<span class="line"></span></span>const buildIndexOptions = {</span>
<span class="line"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> input: &#39;src/index.js&#39;,</span>
<span class="line"></span><span class="token prefix unchanged"> </span><span class="token line"> output: {</span>
<span class="line"></span><span class="token prefix unchanged"> </span><span class="token line">   dir: &#39;dist/esm/&#39;,</span>
<span class="line"></span><span class="token prefix unchanged"> </span><span class="token line">   format: &#39;esm&#39;,</span>
<span class="line"></span><span class="token prefix unchanged"> </span><span class="token line"> },</span>
<span class="line"></span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  plugins: [nodeResolve(), commonjs()]</span>
<span class="line"></span></span>}</span>
<span class="line">export default buildIndexOptions</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="rollup-plugin-babel" tabindex="-1"><a class="header-anchor" href="#rollup-plugin-babel"><span><a href="https://github.com/rollup/plugins/tree/master/packages/babel" target="_blank" rel="noopener noreferrer">@rollup/plugin-babel</a></span></a></h2><p>使用 <a href="https://babeljs.io/" target="_blank" rel="noopener noreferrer">Babel</a> 来使用尚未被浏览器和 Node.js 支持的最新 JavaScript 特性。</p><p>使用 Babel 和 Rollup 最简单的方法是使用 <a href="https://github.com/rollup/plugins/tree/master/packages/babel" target="_blank" rel="noopener noreferrer">@rollup/plugin-babel</a></p><p><strong>安装:</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">pnpm</span> <span class="token function">add</span> @rollup/plugin-babel <span class="token parameter variable">-D</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>使用：</strong></p><div class="language-diff line-numbers-mode" data-highlighter="prismjs" data-ext="diff" data-title="diff"><pre><code><span class="line">import { nodeResolve } from &#39;@rollup/plugin-node-resolve&#39;;</span>
<span class="line">import commonjs from &#39;@rollup/plugin-commonjs&#39;;</span>
<span class="line"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import babel from &#39;@rollup/plugin-babel&#39;;</span>
<span class="line"></span></span>/**</span>
<span class="line"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">* @type {import(&#39;rollup&#39;).RollupOptions}</span>
<span class="line"></span><span class="token prefix unchanged"> </span><span class="token line">*/</span>
<span class="line"></span></span>const buildIndexOptions = {</span>
<span class="line"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> input: &#39;src/index.js&#39;,</span>
<span class="line"></span><span class="token prefix unchanged"> </span><span class="token line"> output: {</span>
<span class="line"></span><span class="token prefix unchanged"> </span><span class="token line">   dir: &#39;dist/esm/&#39;,</span>
<span class="line"></span><span class="token prefix unchanged"> </span><span class="token line">   format: &#39;esm&#39;,</span>
<span class="line"></span><span class="token prefix unchanged"> </span><span class="token line"> },</span>
<span class="line"></span><span class="token prefix unchanged"> </span><span class="token line"> plugins: [</span>
<span class="line"></span><span class="token prefix unchanged"> </span><span class="token line">   nodeResolve(),</span>
<span class="line"></span><span class="token prefix unchanged"> </span><span class="token line">   commonjs(),</span>
<span class="line"></span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    babel({ babelHelpers: &#39;bundled&#39; })</span>
<span class="line"></span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> ]</span>
<span class="line"></span></span>}</span>
<span class="line">export default buildIndexOptions</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>不过这么做之后，打包代码并不会有什么变化，因为我们都知道babel是需要预设的.</p><p>安装 <a href="https://babeljs.io/docs/en/babel-core" target="_blank" rel="noopener noreferrer"><code>babel-core</code></a> 和 <a href="https://babeljs.io/docs/en/babel-preset-env" target="_blank" rel="noopener noreferrer"><code>env</code></a> 预设</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">pnpm add <span class="token operator">-</span><span class="token constant">D</span> @babel<span class="token operator">/</span>core @babel<span class="token operator">/</span>preset<span class="token operator">-</span>env</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>在 Babel 实际编译代码之前，需要进行配置。在项目根目录创建一个名为 <code>.babelrc.json</code> 的新文件</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token string-property property">&quot;presets&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;@babel/preset-env&quot;</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>具体的babel设置，可以参考<a href="https://babeljs.io/docs/config-files#project-wide-configuration" target="_blank" rel="noopener noreferrer"><strong>babel文档</strong></a></p><h3 id="题外话-babel-runtime" tabindex="-1"><a class="header-anchor" href="#题外话-babel-runtime"><span>题外话：@babel/runtime</span></a></h3><p>我们在<code>index.js</code>代码中加入如下的api</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> getRandomNum <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./util.js&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> r <span class="token operator">=</span> <span class="token function">getRandomNum</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item <span class="token operator">*</span> item<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;🚀 ~ arr:&quot;</span><span class="token punctuation">,</span> arr<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们通过babel处理之后会发现一些问题：</p><p>@babel/preset-env 只转换了语法，也就是我们看到的箭头函数、const一类，但是对于进一步需要转换内置对象、实例方法等等API，就显得无能为力了，这些代码需要<strong>polyfill(兼容性垫片)</strong>。所以这个我需要<code>@babel/runtime</code>来帮我们处理。</p><p><code>@babel/runtime</code>是一个核心， 一种实现方式，但是在实现polyfill垫片的过程中，可能会产生很多重复的代码，所以需要<code>@babel/plugin-transform-runtime</code>防止污染全局， 抽离公共的 helper function , 防止冗余，当然在处理polyfill的时候，我们还需要core-js的辅助，基于babel，我们可以使用<code>@babel/runtime-corejs3</code></p><p><strong>安装：</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">pnpm add @babel<span class="token operator">/</span>plugin<span class="token operator">-</span>transform<span class="token operator">-</span>runtime <span class="token operator">-</span><span class="token constant">D</span></span>
<span class="line">pnpm add @babel<span class="token operator">/</span>runtime @babel<span class="token operator">/</span>runtime<span class="token operator">-</span>corejs3</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>要使用<code>@babel/plugin-transform-runtime</code>，<code>@rollup/plugin-babel</code>的<a href="https://github.com/rollup/plugins/tree/master/packages/babel#babelhelpers" target="_blank" rel="noopener noreferrer"><strong>babelHelper</strong></a>处理必须改为runtime</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> nodeResolve <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@rollup/plugin-node-resolve&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> commonjs <span class="token keyword">from</span> <span class="token string">&#39;@rollup/plugin-commonjs&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> babel <span class="token keyword">from</span> <span class="token string">&#39;@rollup/plugin-babel&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> typescript <span class="token keyword">from</span> <span class="token string">&#39;@rollup/plugin-typescript&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;rollup&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>RollupOptions<span class="token punctuation">}</span></span></span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">const</span> buildIndexOptions <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">input</span><span class="token operator">:</span> <span class="token string">&#39;src/index.js&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">dir</span><span class="token operator">:</span> <span class="token string">&#39;dist/esm/&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">format</span><span class="token operator">:</span> <span class="token string">&#39;esm&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token function">nodeResolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function">commonjs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function">babel</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">babelHelpers</span><span class="token operator">:</span> <span class="token string">&#39;runtime&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">include</span><span class="token operator">:</span> <span class="token string">&#39;src/**&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token string">&#39;node_modules/**&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">extensions</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&#39;.js&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;.ts&#39;</span><span class="token punctuation">]</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function">typescript</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> buildIndexOptions</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>.babelrc.json：</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token string-property property">&quot;presets&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token punctuation">[</span></span>
<span class="line">      <span class="token string">&quot;@babel/preset-env&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">{</span></span>
<span class="line">        <span class="token string-property property">&quot;targets&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&gt; 0.25%, not dead&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string-property property">&quot;useBuiltIns&quot;</span><span class="token operator">:</span> <span class="token string">&quot;usage&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string-property property">&quot;corejs&quot;</span><span class="token operator">:</span> <span class="token number">3</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">]</span></span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string-property property">&quot;plugins&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token punctuation">[</span></span>
<span class="line">      <span class="token string">&quot;@babel/plugin-transform-runtime&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">{</span></span>
<span class="line">        <span class="token string-property property">&quot;corejs&quot;</span><span class="token operator">:</span> <span class="token number">3</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">]</span></span>
<span class="line">  <span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个时候你再进行构建，会发现打包后的文件多出了一大堆，这其实就是polyfill中的代码。</p><h2 id="rollup-plugin-typescript" tabindex="-1"><a class="header-anchor" href="#rollup-plugin-typescript"><span><a href="https://github.com/rollup/plugins/tree/master/packages/typescript" target="_blank" rel="noopener noreferrer">@rollup/plugin-typescript</a></span></a></h2><p>要使用typescript就需要依赖这个插件，当然这个插件本身还依赖了<code>typescript</code>和<code>tslib</code>，因此我们需要导入3个包</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">pnpm</span> <span class="token function">add</span> typescript tslib @rollup/plugin-typescript <span class="token parameter variable">-D</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>util.ts</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * 深拷贝</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token parameter">obj</span> 需要深拷贝的对象</span>
<span class="line"> * <span class="token keyword">@returns</span> 深拷贝对象</span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> deepClone <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>obj<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token parameter"><span class="token constant">T</span></span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> obj <span class="token operator">!==</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">||</span> obj <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> obj</span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token literal-property property">result</span><span class="token operator">:</span>any <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      result<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deepClone</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token keyword">return</span> result</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> getRandomNum <span class="token operator">=</span> <span class="token punctuation">(</span>min<span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">max</span><span class="token operator">:</span> number<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token parameter">number</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">let</span> num <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>min <span class="token operator">-</span> max<span class="token punctuation">)</span> <span class="token operator">+</span> max<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">return</span> num<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Index.ts</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> getRandomNum<span class="token punctuation">,</span>deepClone <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./util.ts&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> r <span class="token operator">=</span> <span class="token function">getRandomNum</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> obj2 <span class="token operator">=</span> <span class="token function">deepClone</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">obj2<span class="token punctuation">.</span>b<span class="token punctuation">.</span>c <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当然，配置文件我们也完全可以是ts的</p><p><strong>rollup.config.ts</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> RollupOptions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;rollup&quot;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> nodeResolve <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@rollup/plugin-node-resolve&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> commonjs <span class="token keyword">from</span> <span class="token string">&#39;@rollup/plugin-commonjs&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> babel <span class="token keyword">from</span> <span class="token string">&#39;@rollup/plugin-babel&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> typescript <span class="token keyword">from</span> <span class="token string">&#39;@rollup/plugin-typescript&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> <span class="token literal-property property">config</span><span class="token operator">:</span> RollupOptions <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">input</span><span class="token operator">:</span> <span class="token string">&#39;src/index.ts&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">file</span><span class="token operator">:</span> <span class="token string">&#39;dist/umd/index.js&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">format</span><span class="token operator">:</span> <span class="token string">&#39;umd&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;rollupDemo&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token function">nodeResolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function">commonjs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function">babel</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">babelHelpers</span><span class="token operator">:</span> <span class="token string">&#39;runtime&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">include</span><span class="token operator">:</span> <span class="token string">&#39;src/**&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token string">&#39;node_modules/**&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">extensions</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&#39;.js&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;.ts&#39;</span><span class="token punctuation">]</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function">typescript</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> config<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>tsconfig.json</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token string-property property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string-property property">&quot;module&quot;</span><span class="token operator">:</span> <span class="token string">&quot;esnext&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string-property property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;es5&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string-property property">&quot;lib&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;esnext&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;dom&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;dom.iterable&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string-property property">&quot;skipLibCheck&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">    <span class="token string-property property">&quot;moduleResolution&quot;</span><span class="token operator">:</span> <span class="token string">&quot;bundler&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string-property property">&quot;noEmit&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string-property property">&quot;allowImportingTsExtensions&quot;</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string-property property">&quot;resolveJsonModule&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string-property property">&quot;isolatedModules&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string-property property">&quot;include&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;src/**/*&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;rollup.config.ts&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>**注意：**别忘记tsconfig.json文件中需要加入rollup.config.ts配置文件,不然要报错</p></blockquote><div class="language-diff line-numbers-mode" data-highlighter="prismjs" data-ext="diff" data-title="diff"><pre><code><span class="line">{</span>
<span class="line"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> &quot;compilerOptions&quot;: {</span>
<span class="line"></span><span class="token prefix unchanged"> </span><span class="token line">   ......</span>
<span class="line"></span><span class="token prefix unchanged"> </span><span class="token line"> },</span>
<span class="line"></span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  &quot;include&quot;: [&quot;src/**/*&quot;,&quot;rollup.config.ts&quot;],</span>
<span class="line"></span></span>}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>运行：</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">npx rollup <span class="token parameter variable">-c</span> rollup.config.ts <span class="token parameter variable">--configPlugin</span> typescript</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,80)]))}const c=n(t,[["render",l],["__file","usePlugin.html.vue"]]),r=JSON.parse('{"path":"/advanced/rollup/usePlugin.html","title":"使用插件","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"@rollup/plugin-node-resolve","slug":"rollup-plugin-node-resolve","link":"#rollup-plugin-node-resolve","children":[]},{"level":2,"title":"output.manualChunks","slug":"output-manualchunks","link":"#output-manualchunks","children":[]},{"level":2,"title":"@rollup/plugin-commonjs","slug":"rollup-plugin-commonjs","link":"#rollup-plugin-commonjs","children":[]},{"level":2,"title":"@rollup/plugin-babel","slug":"rollup-plugin-babel","link":"#rollup-plugin-babel","children":[{"level":3,"title":"题外话：@babel/runtime","slug":"题外话-babel-runtime","link":"#题外话-babel-runtime","children":[]}]},{"level":2,"title":"@rollup/plugin-typescript","slug":"rollup-plugin-typescript","link":"#rollup-plugin-typescript","children":[]}],"git":{"updatedTime":1733483676000,"contributors":[{"name":"gang.peng","username":"gang.peng","email":"gang.peng@szyh.com","commits":1,"url":"https://github.com/gang.peng"}]},"filePathRelative":"advanced/rollup/usePlugin.md"}');export{c as comp,r as data};
