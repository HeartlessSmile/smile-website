import{_ as s,c as a,a as e,o as t}from"./app-DzEwyuga.js";const l="/smile-website/images/github_action_1.png",p="/smile-website/images/github_action_2.png",i="/smile-website/images/github_action_3.png",c={};function o(u,n){return t(),a("div",null,n[0]||(n[0]=[e(`<h1 id="github-actions" tabindex="-1"><a class="header-anchor" href="#github-actions"><span>GitHub Actions</span></a></h1><p>GitHub Actions是一个持续集成和持续交付的平台，它可以帮助你通过自动化的构建（包括编译、发布、自动化测试）来验证你的代码，从而尽快地发现集成错误。github于2019年11月后对该功能全面开放，现在所有的github用户可以直接使用该功能。</p><p>GitHub 提供 Linux、Windows 和 macOS 虚拟机来运行您的工作流程，或者您可以在自己的数据中心或云基础架构中托管自己的自托管运行器。</p><h2 id="基本概念" tabindex="-1"><a class="header-anchor" href="#基本概念"><span>基本概念</span></a></h2><p>大家知道，持续集成由很多操作组成，比如拉取代码、打包构建、登录远程服务器，发布到第三方服务等等。GitHub 把这些操作就称为 actions。 基本术语如下：</p><ul><li>workflow: 一个 workflow 就是一个完整的工作流过程，每个workflow 包含一组jobs任务。</li><li>job : jobs任务包含一个或多个job ，每个 job包含一系列的 steps 步骤。</li><li>step : 每个 step 步骤可以执行指令或者使用一个 action 动作。</li><li>action : 每个 action 动作就是一个通用的基本单元</li></ul><h2 id="部署到github" tabindex="-1"><a class="header-anchor" href="#部署到github"><span>部署到GitHub</span></a></h2><p>GitHub Actions 的配置文件叫做 workflow 文件，存放在代码仓库的<code>.github/workflows</code>目录。</p><p>workflow 文件采用 YAML 格式，文件名可以任意取，但是后缀名统一为.yml，比如foo.yml。一个库可以有多个 workflow 文件。GitHub 只要发现.github/workflows目录里面有.yml文件，就会自动运行该文件。</p><p>workflow文件的配置字段非常多，详见<a href="https://docs.github.com/zh/actions/using-workflows/workflow-syntax-for-github-actions" target="_blank" rel="noopener noreferrer">官方文档</a>。这里以本项目的workflow配置为例进行讲解。</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">name</span><span class="token punctuation">:</span> action <span class="token comment"># workflow的名称</span></span>
<span class="line"></span>
<span class="line"><span class="token key atrule">on</span><span class="token punctuation">:</span> <span class="token comment"># on字段指定触发 workflow 的条件，此处为每次代码push到main分支的时候触发</span></span>
<span class="line">  <span class="token key atrule">push</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">branches</span><span class="token punctuation">:</span> <span class="token punctuation">[</span> <span class="token string">&quot;main&quot;</span> <span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token key atrule">jobs</span><span class="token punctuation">:</span> <span class="token comment"># 一个workflow由执行的一项或多项job</span></span>
<span class="line">  <span class="token key atrule">build</span><span class="token punctuation">:</span> <span class="token comment"># 一个job任务，任务名为build</span></span>
<span class="line">    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest <span class="token comment"># runs-on字段指定运行所需要的虚拟机环境。它是必填字段。</span></span>
<span class="line"></span>
<span class="line">    <span class="token key atrule">steps</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token punctuation">-</span> <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v3  <span class="token comment"># 使用checkout@v3这个action获取源码</span></span>
<span class="line"></span>
<span class="line">    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Use Node.js 10.x  <span class="token comment"># 给该项步骤命名</span></span>
<span class="line">      <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/setup<span class="token punctuation">-</span>node@v2 <span class="token comment"># 使用setup-node@v2这个action使用node</span></span>
<span class="line">      <span class="token key atrule">with</span><span class="token punctuation">:</span> <span class="token comment"># 定某个action 的附加参数</span></span>
<span class="line">        <span class="token key atrule">node-version</span><span class="token punctuation">:</span> <span class="token string">&#39;12.x&#39;</span></span>
<span class="line">        <span class="token key atrule">registry-url</span><span class="token punctuation">:</span> <span class="token string">&#39;https://registry.npmjs.org&#39;</span></span>
<span class="line"></span>
<span class="line">    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Build</span>
<span class="line">      <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span> <span class="token comment"># 执行执行某个shell命令或脚本</span></span>
<span class="line">        npm install</span>
<span class="line">        npm run build</span>
<span class="line"></span>
<span class="line">    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> deploy</span>
<span class="line">      <span class="token key atrule">uses</span><span class="token punctuation">:</span> JamesIves/github<span class="token punctuation">-</span>pages<span class="token punctuation">-</span>deploy<span class="token punctuation">-</span>action@4.1.1 <span class="token comment"># 使用action进行分支处理</span></span>
<span class="line">      <span class="token key atrule">with</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token comment"># 发布到指定分支</span></span>
<span class="line">        <span class="token key atrule">BRANCH</span><span class="token punctuation">:</span> gh<span class="token punctuation">-</span>pages</span>
<span class="line">        <span class="token comment"># 构建成果所在目录,默认位置都是在根目录</span></span>
<span class="line">        <span class="token key atrule">FOLDER</span><span class="token punctuation">:</span>  ./dist</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过注释，我们可以知道，这个workflow文件的流程是当用户push代码到main分支时，使用ubuntu-latest虚拟机，虚拟机中执行了检出代码，使用node，执行自定义构建命令，将打包后的代码发布到指定分支。</p><h2 id="开通actions" tabindex="-1"><a class="header-anchor" href="#开通actions"><span>开通Actions</span></a></h2><p>进入github的项目页面，点击“Actions”</p><p><img src="`+l+'" alt="第一步"></p><p>github提供了workflow的应用市场，可以搜索到他人提交的actions，我们这里选择自己创建</p><p><img src="'+p+'" alt="第二步"></p><p>github会自动帮我们创建<code>.github/workflows</code>目录。我们只需将提前准备好的yml文件内容复制进去提交</p><p><img src="'+i+'" alt="第三步"></p><p>最后就可以按照自己的所写的运行时机测试actions的效果了</p><h2 id="小结" tabindex="-1"><a class="header-anchor" href="#小结"><span>小结</span></a></h2><p>github actions 完美的实现了CI/CD，可以让我们的注意力更多的放在代码开发上，一次配置终身受用。github</p>',22)]))}const d=s(c,[["render",o],["__file","githubActions.html.vue"]]),k=JSON.parse('{"path":"/project/deploy/githubActions.html","title":"GitHub Actions","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"基本概念","slug":"基本概念","link":"#基本概念","children":[]},{"level":2,"title":"部署到GitHub","slug":"部署到github","link":"#部署到github","children":[]},{"level":2,"title":"开通Actions","slug":"开通actions","link":"#开通actions","children":[]},{"level":2,"title":"小结","slug":"小结","link":"#小结","children":[]}],"git":{"updatedTime":1733483676000,"contributors":[{"name":"gang.peng","username":"gang.peng","email":"gang.peng@szyh.com","commits":1,"url":"https://github.com/gang.peng"}]},"filePathRelative":"project/deploy/githubActions.md"}');export{d as comp,k as data};
