import{_ as d,c as e,a as r,o as a}from"./app-DzEwyuga.js";const n={};function i(o,t){return a(),e("div",null,t[0]||(t[0]=[r('<h1 id="技术选型" tabindex="-1"><a class="header-anchor" href="#技术选型"><span>技术选型</span></a></h1><p>前面已经说过三种跨端平台方案，那在实际的工作中。我们应该如何选择适合自己项目的方案和框架呢？</p><table><thead><tr><th>开发方案</th><th>JSBridge</th><th>React Native</th><th>Flutter</th><th>UniApp</th></tr></thead><tbody><tr><td>类型</td><td>Web渲染</td><td>原生渲染</td><td>自绘制引擎</td><td>原生渲染</td></tr><tr><td>支持平台</td><td>Android/iOS/Web</td><td>Android/iOS</td><td>Android/iOS/Web/桌面</td><td>Android/iOS/Web</td></tr><tr><td>技术栈</td><td>前端</td><td>偏前端</td><td>偏客户端</td><td>偏前端</td></tr><tr><td>主要开发语言</td><td>JavaScript</td><td>JavaScript(React)</td><td>Dart</td><td>JavaScript(Vue)</td></tr><tr><td>热更新</td><td>支持</td><td>支持</td><td>支持</td><td>支持</td></tr><tr><td>渲染性能</td><td>差</td><td>一般</td><td>好</td><td>好</td></tr><tr><td>滑动性能</td><td>差</td><td>一般</td><td>好</td><td>一般</td></tr><tr><td>开发效率</td><td>高</td><td>一般</td><td>一般</td><td>一般</td></tr><tr><td>维护成本</td><td>低</td><td>一般</td><td>一般</td><td>一般</td></tr><tr><td>社区生态</td><td>最高</td><td>较高</td><td>较一般</td><td>较一般</td></tr></tbody></table><p>我们做技术选型的时候，可以从技术栈、性能、维护成本、社区生态、适用场景等方面去综合考虑。比如，适用场景考虑微信或游戏吗？只需要适配移动端APP还是需要也考虑Web移动端，对性能要求如何，团队内成员技术栈是怎样的？从各个维度综合考虑去选择适合我们的自己团队的方案。</p>',4)]))}const c=d(n,[["render",i],["__file","use.html.vue"]]),p=JSON.parse('{"path":"/project/hybrid/use.html","title":"技术选型","lang":"zh-CN","frontmatter":{},"headers":[],"git":{"updatedTime":1733483676000,"contributors":[{"name":"gang.peng","username":"gang.peng","email":"gang.peng@szyh.com","commits":1,"url":"https://github.com/gang.peng"}]},"filePathRelative":"project/hybrid/use.md"}');export{c as comp,p as data};
