import{_ as a,c as e,a as l,o as p}from"./app-DzEwyuga.js";const i={};function r(s,n){return p(),e("div",null,n[0]||(n[0]=[l('<h1 id="包管理工具" tabindex="-1"><a class="header-anchor" href="#包管理工具"><span>包管理工具</span></a></h1><p>常见包管理工具有如下</p><ul><li>npm</li><li>cnpm</li><li>yarn</li><li>pnpm</li></ul><p>推荐项目使用<code>pnpm</code></p><h2 id="npm" tabindex="-1"><a class="header-anchor" href="#npm"><span>npm</span></a></h2><p>npm 全称为 node package manager，即 node 包管理器</p><h3 id="依赖管理" tabindex="-1"><a class="header-anchor" href="#依赖管理"><span>依赖管理</span></a></h3><p>npm1、npm2采用递归管理，npm3、npm3+依赖扁平化管理消除依赖提升</p><h2 id="cnpm" tabindex="-1"><a class="header-anchor" href="#cnpm"><span>cnpm</span></a></h2><p>cnpm的出现主要是解决国内用户连接npm registry缓慢的问题，淘宝自建的镜像源，下载速度相对快一些</p><blockquote><p>新的npm版本已经支持修改registry改为淘宝镜像源</p></blockquote><h2 id="yarn" tabindex="-1"><a class="header-anchor" href="#yarn"><span>yarn</span></a></h2><p>yarn的出现主要是解决旧版npm存在的问题。在新版npm中，可以说npm已经和yarn非常接近，甚至没有差距了。</p><h3 id="解决方法" tabindex="-1"><a class="header-anchor" href="#解决方法"><span>解决方法</span></a></h3><ul><li>使用扁平的目录结构</li><li>并行下载</li><li>使用本地缓存</li><li>控制台仅输出关键信息</li><li>使用yarn-lock文件记录确切依赖</li></ul><h3 id="优化的内容" tabindex="-1"><a class="header-anchor" href="#优化的内容"><span>优化的内容</span></a></h3><ul><li>增加了某些功能强大的命令</li><li>让既有的命令更加语义化</li><li>本地安装的CLI工具可以使用 yarn 直接启动</li><li>将全局安装的目录当作一个普通的工程，生成package.json文件，便于全局安装移植</li></ul><h2 id="pnpm" tabindex="-1"><a class="header-anchor" href="#pnpm"><span>pnpm</span></a></h2><p>pnpm 仍然使用缓存来保存已经安装过的包，以及使用 pnpm-lock.yaml 来记录详细的依赖版本</p><h3 id="依赖管理-1" tabindex="-1"><a class="header-anchor" href="#依赖管理-1"><span>依赖管理</span></a></h3><ul><li>消除依赖提升</li><li>规范拓扑结构</li></ul><h3 id="特点" tabindex="-1"><a class="header-anchor" href="#特点"><span>特点</span></a></h3><ul><li>速度快</li><li>节约磁盘空间</li><li>支持monorepo</li><li>安全性高</li></ul><p>pnpm 相比较于 yarn/npm 这两个常用的包管理工具在性能上也有了极大的提升，根据目前官方提供的 benchmark 数据可以看出在一些综合场景下比 npm/yarn 快了大概两倍。</p>',24)]))}const h=a(i,[["render",r],["__file","package-management.html.vue"]]),c=JSON.parse('{"path":"/guide/utils/package-management.html","title":"包管理工具","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"npm","slug":"npm","link":"#npm","children":[{"level":3,"title":"依赖管理","slug":"依赖管理","link":"#依赖管理","children":[]}]},{"level":2,"title":"cnpm","slug":"cnpm","link":"#cnpm","children":[]},{"level":2,"title":"yarn","slug":"yarn","link":"#yarn","children":[{"level":3,"title":"解决方法","slug":"解决方法","link":"#解决方法","children":[]},{"level":3,"title":"优化的内容","slug":"优化的内容","link":"#优化的内容","children":[]}]},{"level":2,"title":"pnpm","slug":"pnpm","link":"#pnpm","children":[{"level":3,"title":"依赖管理","slug":"依赖管理-1","link":"#依赖管理-1","children":[]},{"level":3,"title":"特点","slug":"特点","link":"#特点","children":[]}]}],"git":{"updatedTime":1733483676000,"contributors":[{"name":"gang.peng","username":"gang.peng","email":"gang.peng@szyh.com","commits":1,"url":"https://github.com/gang.peng"}]},"filePathRelative":"guide/utils/package-management.md"}');export{h as comp,c as data};
