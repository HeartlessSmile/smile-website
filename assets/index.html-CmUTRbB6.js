import{_ as a,c as e,a as n,o as t}from"./app-DzEwyuga.js";const i={};function l(c,s){return t(),e("div",null,s[0]||(s[0]=[n(`<h1 id="基本规范" tabindex="-1"><a class="header-anchor" href="#基本规范"><span>基本规范</span></a></h1><h2 id="编码格式" tabindex="-1"><a class="header-anchor" href="#编码格式"><span>编码格式</span></a></h2><p>CSS样式表是一个序列通用字符集，传输和存储过程中，这些字符必须由支持 US-ASCII（例如 UTF-8, ISO 8859-x, SHIFT JIS 等）字符编码方式编译</p><ul><li>样式文件必须写上 @charset 规则，并且一定要在样式文件的第一行首个字符位置开始写，编码名用 &quot;UTF-8&quot;</li><li>字符 @charset &quot;&quot;; 都用小写字母，不能出现转义符，编码名允许大小混写</li><li>考虑到在使用“UTF-8”编码情况下 BOM 对代码的污染和编码显示的问题，在可控范围下，坚决不使用 BOM。</li></ul><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css" data-title="css"><pre><code><span class="line"><span class="token atrule"><span class="token rule">@charset</span> <span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token selector">.demo</span><span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5)]))}const p=a(i,[["render",l],["__file","index.html.vue"]]),o=JSON.parse('{"path":"/guide/css/","title":"基本规范","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"编码格式","slug":"编码格式","link":"#编码格式","children":[]}],"git":{"updatedTime":1733483676000,"contributors":[{"name":"gang.peng","username":"gang.peng","email":"gang.peng@szyh.com","commits":1,"url":"https://github.com/gang.peng"}]},"filePathRelative":"guide/css/index.md"}');export{p as comp,o as data};
