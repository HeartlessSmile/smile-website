import{_ as i,c as l,a as o,o as d}from"./app-DzEwyuga.js";const a={};function r(t,e){return d(),l("div",null,e[0]||(e[0]=[o('<h1 id="code-review" tabindex="-1"><a class="header-anchor" href="#code-review"><span>Code Review</span></a></h1><p>在前端开发中，Code Review 是非常重要的一个环节，可以有效地提高代码质量、减少错误和维护成本。</p><p>但在大部分团队中，认真去做Code Review的很少，有的只是用lint工具扫描一遍，有的可能直接就没有这个环节，代码质量只能依赖后续测试团队。这个固然有一部分是敏捷开发带来的弊端，大部分更是因为团队不去重视的结果。更多的原因是团队内推行Code Review后发现这是一个吃力不讨好的流程，耗费时间过长，讲解枯燥，维护成本过高，收益过小。</p><h2 id="code-review的好处" tabindex="-1"><a class="header-anchor" href="#code-review的好处"><span>Code Review的好处</span></a></h2><p>实际上，Code Review可以为我们带来大量的好处：</p><ul><li>提高代码质量：Code Review可以帮助开发者发现潜在的问题、漏洞和错误，以及提供更好的实现方式，从而提高代码质量。</li><li>减少维护成本：在Code Review过程中，可以发现代码中的问题和漏洞，并及时修改，避免了在上线后出现问题需要大量时间和精力进行维护的情况。</li><li>加强团队协作：Code Review可以促进团队内成员之间的交流和协作，提高团队整体的代码质量和开发效率。</li><li>提高代码可读性：Code Review可以帮助开发者发现代码可读性的问题，例如命名、注释、代码结构等方面，从而提高代码的可读性。</li><li>检查代码安全性：Code Review可以检查代码中的安全问题，例如XSS、CSRF、SQL注入等，从而提高代码的安全性。</li></ul><h2 id="如何code-review" tabindex="-1"><a class="header-anchor" href="#如何code-review"><span>如何Code Review？</span></a></h2><p>大部分团队Code Review失败的原因都是因为不知道如何去做，每次review的时候，都是让开发者拿自己代码逐行去讲解，底下倾听者很快就陷入细枝末节的枯燥情绪中，变得困倦。</p><p>那么我们应该如何去正确的review呢？</p><ol><li>确立开发规范，包含但不局限于代码规范，命名规范等</li><li>代码格式问题可在开发时通过自动化工具解决，不应放在日常Code Review中 <ul><li>VsCode 格式化</li><li>标准的Eslint规则 + husky(本地pre-commit校验)</li><li>代码仓库CI流水线校验</li></ul></li><li>遵循先设计，再编码的流程。review时对照前期评审好的设计，可节省大量时间</li><li>技术Leader或对应模块负责人，应在一起开会前将代码提前review。开会时直接指出具体问题</li></ol><p>在我看来，Code Review 考验的更多是技术Leader的能力，在前期刚推行Code Review时，需要Leader牺牲自己的时间去挨个审查代码。后续随着团队习惯培养到一定成功后，可以让团队内互相Review，逐渐的将这个习惯保留下来，Code Review就算成功了。</p><h2 id="重点关注问题点" tabindex="-1"><a class="header-anchor" href="#重点关注问题点"><span>重点关注问题点</span></a></h2><p>常见需要Code Review的问题点：</p><ol><li>重要模块整体review</li><li>滥用全局变量</li><li>命名规范</li><li>闭包内部变量未被销毁</li><li>计时器是否及时清理</li><li>监听事件是否有解绑</li><li>第三方库的销毁函数，在页面卸载时也需要调用，比如EventBus：</li><li>v-if 指令导致的内存泄露</li><li>异步操作是否有异常处理</li><li>组件是否需要拆分</li><li>TypeScript中滥用any</li><li>未用防抖节流</li><li>动画减少回流与重绘</li><li>关键业务未加注释</li><li>等等</li></ol>',14)]))}const v=i(a,[["render",r],["__file","codeReview.html.vue"]]),c=JSON.parse('{"path":"/project/codeQuality/codeReview.html","title":"Code Review","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"Code Review的好处","slug":"code-review的好处","link":"#code-review的好处","children":[]},{"level":2,"title":"如何Code Review？","slug":"如何code-review","link":"#如何code-review","children":[]},{"level":2,"title":"重点关注问题点","slug":"重点关注问题点","link":"#重点关注问题点","children":[]}],"git":{"updatedTime":1733483676000,"contributors":[{"name":"gang.peng","username":"gang.peng","email":"gang.peng@szyh.com","commits":1,"url":"https://github.com/gang.peng"}]},"filePathRelative":"project/codeQuality/codeReview.md"}');export{v as comp,c as data};
