import{_ as e,c as n,a,o as i}from"./app-DzEwyuga.js";const l={};function t(d,s){return i(),n("div",null,s[0]||(s[0]=[a(`<h1 id="安装和更新" tabindex="-1"><a class="header-anchor" href="#安装和更新"><span>安装和更新</span></a></h1><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2><p>跟我们使用<code>Node.js</code>一样，都需要先到官网进行安装，并且安装时会将编译器和包管理器一同安装到系统中。<a href="https://www.rust-lang.org/zh-CN/" target="_blank" rel="noopener noreferrer">Rust官网地址</a></p><table><thead><tr><th></th><th>Node</th><th>Rust</th></tr></thead><tbody><tr><td>运行命令</td><td>node</td><td>rustc</td></tr><tr><td>包管理器</td><td>npm</td><td>cargo</td></tr><tr><td>版本管理</td><td>nvm</td><td>rustup</td></tr></tbody></table><p><code>Rust</code> 是编译型语言，通过编译器 <code>rustc</code> 将静态语言编译成目标平台的原生可执行文件，这些可执行文件可以直接在目标平台上运行。类似于<code>TypeScript</code>的解析器<code>tsc</code>将<code>.ts</code>文件解析为可执行的<code>.js</code>文件。</p><h3 id="linux或macos" tabindex="-1"><a class="header-anchor" href="#linux或macos"><span>Linux或MacOS</span></a></h3><p>MacOS、Linux 或其它类 Unix 系统。要下载 <code>Rustup</code> 并安装 <code>Rust</code>，请在终端中运行以下命令</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">curl</span> <span class="token parameter variable">--proto</span> <span class="token string">&#39;=https&#39;</span> <span class="token parameter variable">--tlsv1.2</span> <span class="token parameter variable">-sSf</span> https://sh.rustup.rs <span class="token operator">|</span> <span class="token function">sh</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>rustup安装后，系统会提示您三个选项：</p><div class="language-txt line-numbers-mode" data-highlighter="prismjs" data-ext="txt" data-title="txt"><pre><code><span class="line">1) Proceed with installation (default)</span>
<span class="line">2) Customize installation</span>
<span class="line">3) Cancel installation</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>默认选择第一个就可以，安装完成后，界面会提示</p><div class="language-txt line-numbers-mode" data-highlighter="prismjs" data-ext="txt" data-title="txt"><pre><code><span class="line">stable installed - rustc 1.75.0 (82e1608df 2023-12-21)</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">Rust is installed now. Great!</span>
<span class="line"></span>
<span class="line">To get started you need Cargo&#39;s bin directory ($HOME/.cargo/bin) in your PATH</span>
<span class="line">environment variable. Next time you log in this will be done automatically.</span>
<span class="line"></span>
<span class="line">To configure your current shell run source $HOME/.cargo/env</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="windows" tabindex="-1"><a class="header-anchor" href="#windows"><span>Windows</span></a></h3><p>在 Windows 上，访问<a href="https://www.rust-lang.org/zh-CN/tools/install" target="_blank" rel="noopener noreferrer">安装页面</a>并按照说明安装 Rust。</p><p>在安装过程的某个步骤，你可能会收到一条消息，提示你还需要适用于 Visual Studio 2013 或更高版本的 C++ 的构建工具（C++ build tools）。获取这些构建工具的最简单方法是安装 Visual Studio 2019 的构建工具。当被问及要安装哪些内容时，请确保已选择 “C++ build tools”，并包括 Windows 10 SDK 和英文语言包。</p><p>要检查是否正确安装了 Rust，可打开 shell 并输入下面这行</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">rustc <span class="token parameter variable">--version</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>然后就会看到最新发布的稳定版本的版本号、提交哈希值和提交日期，如下所示格式</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">rustc x.y.z <span class="token punctuation">(</span>abcabcabc yyyy-mm-dd<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果有表示你安装成功了，如果没有并且是Windows，请把 <code>C:\\Users\\{PC}\\.cargo\\bin</code> 添加到环境变量 PATH 里，如果没有生效，重启一下即可。</p><h2 id="安装其他版本" tabindex="-1"><a class="header-anchor" href="#安装其他版本"><span>安装其他版本</span></a></h2><p>前面我们说过，<code>rustc</code>是可以管理 <code>Rust</code> 多个版本的，例如，想安装<code>1.29.0</code> 版本</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">rustup <span class="token function">install</span> <span class="token number">1.29</span>.0</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>安装完成后，你可以使用以下命令切换到已安装的特定版本</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">rustup default <span class="token number">1.29</span>.0</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="更新和卸载" tabindex="-1"><a class="header-anchor" href="#更新和卸载"><span>更新和卸载</span></a></h2><p>通过 <code>rustup</code> 安装 <code>Rust</code> 后，更新到最新版本很简单。在 <code>shell</code> 中运行以下更新命令：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">rustup update</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>要卸载 <code>Rust</code> 和 <code>rustup</code>，在 <code>shell</code> 中运行以下卸载命令：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">rustup self uninstall”</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="包管理器" tabindex="-1"><a class="header-anchor" href="#包管理器"><span>包管理器</span></a></h2><p><code>Rust</code> 的包管理器叫 <code>cargo</code>，我们使用<code>cargo --help</code>会发现，<code>cargo</code>主要有如下命令</p><div class="language-txt line-numbers-mode" data-highlighter="prismjs" data-ext="txt" data-title="txt"><pre><code><span class="line">build, b    构建当前包</span>
<span class="line">check, c    分析当前包并报告错误，但不构建目标文件</span>
<span class="line">clean       删除构建的目录</span>
<span class="line">doc, d      构建当前包及其依赖项目的文档（会创建 \`target/doc\` 目录，使用浏览器打开可以查看详细的文档）</span>
<span class="line">new         创建一个新的包</span>
<span class="line">init        在现有目录中创建一个新的包</span>
<span class="line">add         添加依赖项到当前项目中</span>
<span class="line">remove      从当前项目中删除依赖项</span>
<span class="line">run, r      构建并运行项目</span>
<span class="line">test, t     运行测试</span>
<span class="line">bench       运行基准测试</span>
<span class="line">update      更新在 Cargo.lock 注册的依赖项版本</span>
<span class="line">search      搜索 crates</span>
<span class="line">publish     打包并上传当前包 （crates.io）</span>
<span class="line">install     安装 Rust 二进制文件，默认目录在 $HOME/.cargo/bin</span>
<span class="line">uninstall   卸载 Rust 二进制文件</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>后续我们在使用过程中，会逐步了解每个命令的详细作用</p>`,34)]))}const c=e(l,[["render",t],["__file","install.html.vue"]]),p=JSON.parse('{"path":"/rust/guide/install.html","title":"安装和更新","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[{"level":3,"title":"Linux或MacOS","slug":"linux或macos","link":"#linux或macos","children":[]},{"level":3,"title":"Windows","slug":"windows","link":"#windows","children":[]}]},{"level":2,"title":"安装其他版本","slug":"安装其他版本","link":"#安装其他版本","children":[]},{"level":2,"title":"更新和卸载","slug":"更新和卸载","link":"#更新和卸载","children":[]},{"level":2,"title":"包管理器","slug":"包管理器","link":"#包管理器","children":[]}],"git":{"updatedTime":1733483676000,"contributors":[{"name":"gang.peng","username":"gang.peng","email":"gang.peng@szyh.com","commits":1,"url":"https://github.com/gang.peng"}]},"filePathRelative":"rust/guide/install.md"}');export{c as comp,p as data};
