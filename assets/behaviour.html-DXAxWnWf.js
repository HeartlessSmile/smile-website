import{_ as s,c as a,a as p,o as t}from"./app-DzEwyuga.js";const e={};function l(c,n){return t(),a("div",null,n[0]||(n[0]=[p(`<h1 id="行为监控" tabindex="-1"><a class="header-anchor" href="#行为监控"><span>行为监控</span></a></h1><p>监控用户行为是为了了解用户在网站或应用程序中的行为和需求，从而优化用户体验和提高业务转化率。通过监控用户行为，我们可以收集和分析用户的操作和行为数据，帮助我们发现网站或应用程序的问题和瓶颈，了解用户的需求和偏好，从而针对性地改进网站或应用程序的设计和功能，提高用户的满意度和忠诚度，促进业务的增长。</p><p>具体来说，通过用户行为监控可以实现以下几个方面的目标：</p><ol><li>收集用户行为数据。通过监控用户的点击、浏览、搜索、购买等行为，我们可以收集大量的用户数据，从而了解用户的兴趣、偏好、行为路径、停留时间等信息，为我们提供优化网站或应用程序的基础数据。</li><li>优化用户体验。通过分析用户的行为和反馈，我们可以发现网站或应用程序的问题和瓶颈，并及时改进和优化，提高用户的满意度和忠诚度，减少用户流失率。</li><li>提高业务转化率。通过分析用户的购买、注册、订阅等行为，我们可以了解用户的需求和行为习惯，从而优化网站或应用程序的设计和功能，提高业务的转化率和收入。</li><li>精准营销和个性化推荐。通过分析用户的行为和兴趣，我们可以实现精准营销和个性化推荐，为用户提供更优质的服务和产品，提高用户的满意度和忠诚度，促进业务的增长。</li></ol><h2 id="pv、uv" tabindex="-1"><a class="header-anchor" href="#pv、uv"><span>PV、UV</span></a></h2><p>PV（Page View）和 UV（Unique Visitor）是衡量网站流量和用户访问量的两个指标。PV指的是页面浏览量，即网站的访问量；UV指的是独立访客数量，即访问网站的独立用户数。</p><p>我们可以通过 document.referrer 获取来源页面信息，可以判断是否为新用户。同时，通过 Cookie 和 LocalStorage 等机制可以记录用户访问时间和访问次数等信息。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// 记录 PV</span></span>
<span class="line"><span class="token keyword">var</span> pvCount <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;pvCount&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">pvCount<span class="token operator">++</span><span class="token punctuation">;</span></span>
<span class="line">localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&#39;pvCount&#39;</span><span class="token punctuation">,</span> pvCount<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 记录 UV</span></span>
<span class="line"><span class="token keyword">var</span> uvCount <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;uvCount&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>document<span class="token punctuation">.</span>referrer <span class="token operator">||</span> document<span class="token punctuation">.</span>referrer<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">!=</span> location<span class="token punctuation">.</span>hostname<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  uvCount<span class="token operator">++</span><span class="token punctuation">;</span></span>
<span class="line">  localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&#39;uvCount&#39;</span><span class="token punctuation">,</span> uvCount<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在实际应用中，为了保证数据准确性和安全性，需要考虑用户隐私和数据保护等问题，每进入页面一次，算一次PV，后端根据业务逻辑，如使用用户id等计算UV。</p><h2 id="页面停留时长" tabindex="-1"><a class="header-anchor" href="#页面停留时长"><span>页面停留时长</span></a></h2><p>当用户打开页面时，记录一个开始时间点；当用户关闭页面或跳转到其他页面时，记录一个结束时间点，然后计算两者之差即为页面停留时长。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> startTime <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 记录开始时间</span></span>
<span class="line"></span>
<span class="line">window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;beforeunload&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">var</span> endTime <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 记录结束时间</span></span>
<span class="line">  <span class="token keyword">var</span> stayTime <span class="token operator">=</span> endTime <span class="token operator">-</span> startTime<span class="token punctuation">;</span> <span class="token comment">// 计算页面停留时长</span></span>
<span class="line">  <span class="token comment">// 将数据传递给后端进行处理或记录到本地</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用框架时，可以利用框架自身的生命周期或路由守卫来计算时间点，如vue <code>beforeDestroy</code>，react <code>componentWillUnmount</code></p><h2 id="事件监听" tabindex="-1"><a class="header-anchor" href="#事件监听"><span>事件监听</span></a></h2><p>用户事件可大致分为鼠标事件、键盘事件、滚动事件三类，每种类型的操作行为又可以细分出很多子类。</p><h3 id="鼠标事件" tabindex="-1"><a class="header-anchor" href="#鼠标事件"><span>鼠标事件</span></a></h3><p>鼠标事件包含单击、双击、按下、松开、滑动等，可以通过，click、dbclick、mousedown、mouseup、mousemove等事件监听。除了需要记录鼠标事件的操作类型，还应该添加鼠标操作的关键信息，比如单机的按键是左键还是右键，触发单击事件的DOM节点类型。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// 定义一个对象，用于记录鼠标操作的信息</span></span>
<span class="line"><span class="token keyword">var</span> mouseEventInfo <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">eventType</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>  <span class="token comment">// 鼠标事件类型</span></span>
<span class="line">  <span class="token literal-property property">buttonType</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 鼠标按键类型</span></span>
<span class="line">  <span class="token literal-property property">targetNode</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span>  <span class="token comment">// 触发事件的DOM节点类型</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 获取目标节点的类型</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">getNodeType</span><span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> target<span class="token punctuation">.</span>nodeName<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 监听鼠标事件</span></span>
<span class="line">document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 记录鼠标事件类型</span></span>
<span class="line">  mouseEventInfo<span class="token punctuation">.</span>eventType <span class="token operator">=</span> <span class="token string">&#39;click&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 记录鼠标按键类型</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>button <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    mouseEventInfo<span class="token punctuation">.</span>buttonType <span class="token operator">=</span> <span class="token string">&#39;left&#39;</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>button <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    mouseEventInfo<span class="token punctuation">.</span>buttonType <span class="token operator">=</span> <span class="token string">&#39;middle&#39;</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>button <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    mouseEventInfo<span class="token punctuation">.</span>buttonType <span class="token operator">=</span> <span class="token string">&#39;right&#39;</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 记录触发事件的DOM节点类型</span></span>
<span class="line">  mouseEventInfo<span class="token punctuation">.</span>targetNode <span class="token operator">=</span> <span class="token function">getNodeType</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 发送数据到后端，可根据需求自定义发送的数据格式</span></span>
<span class="line">  <span class="token function">sendDataToBackend</span><span class="token punctuation">(</span>mouseEventInfo<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;dblclick&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 记录鼠标事件类型</span></span>
<span class="line">  mouseEventInfo<span class="token punctuation">.</span>eventType <span class="token operator">=</span> <span class="token string">&#39;dblclick&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 记录鼠标按键类型</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>button <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    mouseEventInfo<span class="token punctuation">.</span>buttonType <span class="token operator">=</span> <span class="token string">&#39;left&#39;</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>button <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    mouseEventInfo<span class="token punctuation">.</span>buttonType <span class="token operator">=</span> <span class="token string">&#39;middle&#39;</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>button <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    mouseEventInfo<span class="token punctuation">.</span>buttonType <span class="token operator">=</span> <span class="token string">&#39;right&#39;</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 记录触发事件的DOM节点类型</span></span>
<span class="line">  mouseEventInfo<span class="token punctuation">.</span>targetNode <span class="token operator">=</span> <span class="token function">getNodeType</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 发送数据到后端，可根据需求自定义发送的数据格式</span></span>
<span class="line">  <span class="token function">sendDataToBackend</span><span class="token punctuation">(</span>mouseEventInfo<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;mousedown&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 记录鼠标事件类型</span></span>
<span class="line">  mouseEventInfo<span class="token punctuation">.</span>eventType <span class="token operator">=</span> <span class="token string">&#39;mousedown&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 记录鼠标按键类型</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>button <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    mouseEventInfo<span class="token punctuation">.</span>buttonType <span class="token operator">=</span> <span class="token string">&#39;left&#39;</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>button <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    mouseEventInfo<span class="token punctuation">.</span>buttonType <span class="token operator">=</span> <span class="token string">&#39;middle&#39;</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>button <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    mouseEventInfo<span class="token punctuation">.</span>buttonType <span class="token operator">=</span> <span class="token string">&#39;right&#39;</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 记录触发事件的DOM节点类型</span></span>
<span class="line">  mouseEventInfo<span class="token punctuation">.</span>targetNode <span class="token operator">=</span> <span class="token function">getNodeType</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 发送数据到后端，可根据需求自定义发送的数据格式</span></span>
<span class="line">  <span class="token function">sendDataToBackend</span><span class="token punctuation">(</span>mouseEventInfo<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="键盘事件" tabindex="-1"><a class="header-anchor" href="#键盘事件"><span>键盘事件</span></a></h3><p>键盘事件可以分为按下和松开两类，可以通过keydown和keyup事件来监听。当用户在页面上按下键盘时，会触发keydown事件；当用户松开键盘时，会触发keyup事件。</p><p>类似于鼠标事件，我们也可以通过事件监听器来监控键盘事件。同样地，在事件回调函数中，我们可以记录下用户按下的键盘键码、触发事件的DOM节点等信息。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// 添加键盘事件监听器</span></span>
<span class="line">document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;keydown&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 记录键盘按下事件相关信息</span></span>
<span class="line">  <span class="token keyword">var</span> key <span class="token operator">=</span> event<span class="token punctuation">.</span>keyCode <span class="token operator">||</span> event<span class="token punctuation">.</span>which<span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">var</span> target <span class="token operator">=</span> event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>tagName<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">var</span> timestamp <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;keyboard&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token string">&#39;keydown&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">key</span><span class="token operator">:</span> key<span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">target</span><span class="token operator">:</span> target<span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">timestamp</span><span class="token operator">:</span> timestamp</span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">// 发送数据到后台</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;keyup&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 记录键盘松开事件相关信息</span></span>
<span class="line">  <span class="token keyword">var</span> key <span class="token operator">=</span> event<span class="token punctuation">.</span>keyCode <span class="token operator">||</span> event<span class="token punctuation">.</span>which<span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">var</span> target <span class="token operator">=</span> event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>tagName<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">var</span> timestamp <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;keyboard&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token string">&#39;keyup&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">key</span><span class="token operator">:</span> key<span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">target</span><span class="token operator">:</span> target<span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">timestamp</span><span class="token operator">:</span> timestamp</span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">// 发送数据到后台</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>键盘事件可能会被浏览器默认处理，例如浏览器可能会响应用户的键盘快捷键，从而导致我们无法正确地获取到用户的按键信息。</p></div><h3 id="滚动事件" tabindex="-1"><a class="header-anchor" href="#滚动事件"><span>滚动事件</span></a></h3><p>滚动事件较为简单，仅需监听scroll事件，在回调函数中，可以通过获取scrollTop值和页面高度等信息，计算出用户的访问深度和停留时长。同时，也可以记录滚动过程中的一些关键信息，比如滚动的方向和速度等，以便进一步分析用户的行为。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">let</span> startTime <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">let</span> startScrollTop <span class="token operator">=</span> window<span class="token punctuation">.</span>pageYOffset<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">let</span> startVisibleHeight <span class="token operator">=</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">let</span> startTotalHeight <span class="token operator">=</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollHeight<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;scroll&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">let</span> currentTime <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">let</span> currentScrollTop <span class="token operator">=</span> window<span class="token punctuation">.</span>pageYOffset<span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">let</span> currentVisibleHeight <span class="token operator">=</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">let</span> currentTotalHeight <span class="token operator">=</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollHeight<span class="token punctuation">;</span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">// 计算停留时长和访问深度</span></span>
<span class="line">  <span class="token keyword">let</span> stayTime <span class="token operator">=</span> currentTime <span class="token operator">-</span> startTime<span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">let</span> scrollDepth <span class="token operator">=</span> currentScrollTop <span class="token operator">+</span> currentVisibleHeight<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 记录滚动方向和速度</span></span>
<span class="line">  <span class="token keyword">let</span> direction <span class="token operator">=</span> currentScrollTop <span class="token operator">&gt;</span> startScrollTop <span class="token operator">?</span> <span class="token string">&#39;down&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;up&#39;</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">let</span> speed <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>currentScrollTop <span class="token operator">-</span> startScrollTop<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>currentTime <span class="token operator">-</span> startTime<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 记录关键信息</span></span>
<span class="line">  <span class="token keyword">let</span> eventInfo <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;scroll&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">direction</span><span class="token operator">:</span> direction<span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">speed</span><span class="token operator">:</span> speed<span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">target</span><span class="token operator">:</span> event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>tagName<span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">stayTime</span><span class="token operator">:</span> stayTime<span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">scrollDepth</span><span class="token operator">:</span> scrollDepth<span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">scrollTop</span><span class="token operator">:</span> currentScrollTop<span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">visibleHeight</span><span class="token operator">:</span> currentVisibleHeight<span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">totalHeight</span><span class="token operator">:</span> currentTotalHeight</span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 上报数据</span></span>
<span class="line">  <span class="token function">report</span><span class="token punctuation">(</span>eventInfo<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 更新起始时间和位置信息</span></span>
<span class="line">  startTime <span class="token operator">=</span> currentTime<span class="token punctuation">;</span></span>
<span class="line">  startScrollTop <span class="token operator">=</span> currentScrollTop<span class="token punctuation">;</span></span>
<span class="line">  startVisibleHeight <span class="token operator">=</span> currentVisibleHeight<span class="token punctuation">;</span></span>
<span class="line">  startTotalHeight <span class="token operator">=</span> currentTotalHeight<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ajax监听" tabindex="-1"><a class="header-anchor" href="#ajax监听"><span>AJAX监听</span></a></h2><p>Ajax 请求包含请求的发起与取消两类，可以通过重写XMLHttpRequest和Fetch方法采集关键信息。如果使用Axios等第三方请求库，可以直接使用相应的拦截器采集信息。如果后端服务提供了根据UUID查询请求详情的功能，那么只需要简单手机请求的地址、方法和UUID即可。</p><h3 id="重写xmlhttprequest" tabindex="-1"><a class="header-anchor" href="#重写xmlhttprequest"><span>重写XMLHttpRequest</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> _XMLHttpRequest <span class="token operator">=</span> window<span class="token punctuation">.</span>XMLHttpRequest<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">window<span class="token punctuation">.</span><span class="token function-variable function">XMLHttpRequest</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">_XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  xhr<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;loadstart&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// HTTP 请求发出</span></span>
<span class="line">    <span class="token keyword">const</span> requestInfo <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">method</span><span class="token operator">:</span> xhr<span class="token punctuation">.</span>method<span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">url</span><span class="token operator">:</span> xhr<span class="token punctuation">.</span>url<span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">startTime</span><span class="token operator">:</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token comment">// 将请求信息存储起来，比如通过发送到后端服务器，或者存储在本地缓存中等。</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  xhr<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;abort&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 请求中止</span></span>
<span class="line">    <span class="token keyword">const</span> requestInfo <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">method</span><span class="token operator">:</span> xhr<span class="token punctuation">.</span>method<span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">url</span><span class="token operator">:</span> xhr<span class="token punctuation">.</span>url<span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">abortTime</span><span class="token operator">:</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">abortReason</span><span class="token operator">:</span> <span class="token string">&#39;用户取消请求&#39;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token comment">// 将请求信息存储起来，比如通过发送到后端服务器，或者存储在本地缓存中等。</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  xhr<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 请求失败</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  xhr<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;load&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 请求成功完成</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  xhr<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;timeout&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 请求超时</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  xhr<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;loadend&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 请求完成，不管成功或失败</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">return</span> xhr<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="劫持fetch" tabindex="-1"><a class="header-anchor" href="#劫持fetch"><span>劫持Fetch</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> _fetch <span class="token operator">=</span> window<span class="token punctuation">.</span>fetch<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">window<span class="token punctuation">.</span><span class="token function-variable function">fetch</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> startTime <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token function">_fetch</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> endTime <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// 在请求成功时处理相关逻辑，比如记录请求时间、请求返回数据等信息</span></span>
<span class="line">    <span class="token keyword">return</span> response<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 在请求失败时处理相关逻辑，比如记录请求失败原因等信息</span></span>
<span class="line">    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="axios-拦截器" tabindex="-1"><a class="header-anchor" href="#axios-拦截器"><span>axios 拦截器</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 添加请求拦截器</span></span>
<span class="line">axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 在发送请求之前做些什么</span></span>
<span class="line">  config<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>Authorization <span class="token operator">=</span> <span class="token string">&#39;Bearer &#39;</span> <span class="token operator">+</span> <span class="token function">getToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">return</span> config<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 对请求错误做些什么</span></span>
<span class="line">  <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 添加响应拦截器</span></span>
<span class="line">axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 对响应数据做点什么</span></span>
<span class="line">  <span class="token keyword">return</span> response<span class="token punctuation">.</span>data<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 对响应错误做点什么</span></span>
<span class="line">  <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="页面路径" tabindex="-1"><a class="header-anchor" href="#页面路径"><span>页面路径</span></a></h2><p>页面路径监控是指在用户使用网站或应用时，对用户浏览页面的路径进行监控和记录。这个过程通常与用户的点击行为、页面跳转、页面加载等操作一起上报，来优化用户体验和提升产品质量。</p><h3 id="利用历史记录api" tabindex="-1"><a class="header-anchor" href="#利用历史记录api"><span>利用历史记录API</span></a></h3><p>浏览器提供了历史记录API，可以通过监听该API的事件，获取用户的浏览路径。当用户访问新的页面或触发浏览器前进/后退按钮时，就会触发历史记录API的相关事件。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;popstate&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;页面路径监控：&#39;</span><span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;hashchange&#39;</span><span class="token punctuation">,</span> <span class="token parameter">event</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;页面路径监控：&#39;</span><span class="token punctuation">,</span> event<span class="token punctuation">.</span>newURL<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="利用路由框架" tabindex="-1"><a class="header-anchor" href="#利用路由框架"><span>利用路由框架</span></a></h3><p>路由框架可以方便地管理页面路径，并提供了相应的事件钩子。一般来说，路由框架的事件钩子包括页面跳转前的钩子、页面跳转后的钩子等，可以通过这些钩子来获取用户的浏览路径。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">router<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;页面路径监控：&#39;</span><span class="token punctuation">,</span> to<span class="token punctuation">.</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="利用页面加载事件" tabindex="-1"><a class="header-anchor" href="#利用页面加载事件"><span>利用页面加载事件</span></a></h3><p>当页面加载完成后，可以通过记录当前页面的路径来实现页面路径监控。通常使用window.onload事件来监听页面加载完成的时机。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">window<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;页面路径监控：&#39;</span><span class="token punctuation">,</span> location<span class="token punctuation">.</span>pathname<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,45)]))}const i=s(e,[["render",l],["__file","behaviour.html.vue"]]),u=JSON.parse('{"path":"/project/monitor/behaviour.html","title":"行为监控","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"PV、UV","slug":"pv、uv","link":"#pv、uv","children":[]},{"level":2,"title":"页面停留时长","slug":"页面停留时长","link":"#页面停留时长","children":[]},{"level":2,"title":"事件监听","slug":"事件监听","link":"#事件监听","children":[{"level":3,"title":"鼠标事件","slug":"鼠标事件","link":"#鼠标事件","children":[]},{"level":3,"title":"键盘事件","slug":"键盘事件","link":"#键盘事件","children":[]},{"level":3,"title":"滚动事件","slug":"滚动事件","link":"#滚动事件","children":[]}]},{"level":2,"title":"AJAX监听","slug":"ajax监听","link":"#ajax监听","children":[{"level":3,"title":"重写XMLHttpRequest","slug":"重写xmlhttprequest","link":"#重写xmlhttprequest","children":[]},{"level":3,"title":"劫持Fetch","slug":"劫持fetch","link":"#劫持fetch","children":[]},{"level":3,"title":"axios 拦截器","slug":"axios-拦截器","link":"#axios-拦截器","children":[]}]},{"level":2,"title":"页面路径","slug":"页面路径","link":"#页面路径","children":[{"level":3,"title":"利用历史记录API","slug":"利用历史记录api","link":"#利用历史记录api","children":[]},{"level":3,"title":"利用路由框架","slug":"利用路由框架","link":"#利用路由框架","children":[]},{"level":3,"title":"利用页面加载事件","slug":"利用页面加载事件","link":"#利用页面加载事件","children":[]}]}],"git":{"updatedTime":1733483676000,"contributors":[{"name":"gang.peng","username":"gang.peng","email":"gang.peng@szyh.com","commits":1,"url":"https://github.com/gang.peng"}]},"filePathRelative":"project/monitor/behaviour.md"}');export{i as comp,u as data};
